openapi: 3.0.0
servers:
  - description: Local server
    url: http://0.0.0.0:8000
info:
  title: Fireblocks Provider Connectivity API v2
  version: 0.3.1
  x-logo:
    url: https://drive.google.com/uc?id=1sseKokeIoh7hnUpV8skWYF_VzncF3slT
    altText: Fireblocks logo
  contact:
    name: Fireblocks
    url: https://fireblocks.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  description: 
    $ref: README.md
tags:
  - name: capabilities
    description: Server capabilities discovery operations.
  - name: accounts
    description: User accounts management operations.
  - name: balances
    description: Balances management operations.
  - name: historicBalances
    description: Historic balances operations.
  - name: liquidity
    description: Liquidity operations
  - name: trading
    description: Order book trading operations.
  - name: transfers
    description: Fund transfers management operations.
  - name: transfersBlockchain
    description: Fund transfers over public blockchains.
  - name: transfersFiat
    description: National currency fund transfers.
  - name: transfersPeerAccounts
    description: Transfers to a peer account managed by the same provider.
  - name: transfersInternal
    description: Transfers to a sub account in the same account.
paths:
  /capabilities:
    get:
      operationId: getCapabilities
      summary: Describe server capabilities
      description: |-
        Returns the API version and all the capabilities that the server supports.  
          
        The capabilities are specified as a map. The map keys are the capability names and the values are lists of account IDs. If all the accounts support a capability, an asterisk could be used, instead of listing all the accounts.
      tags:
        - capabilities
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
      responses:
        '200':
          description: Server capability details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capabilities'
              examples:
                allAccountsSupportAllCapabilities:
                  summary: All accounts support all capabilities
                  value:
                    version: 1.0.37
                    components:
                      accounts: '*'
                      balances: '*'
                      transfers: '*'
                      transfersBlockchain: '*'
                      transfersFiat: '*'
                      transfersPeerAccounts: '*'
                      transfersInternal: '*'
                      trading: '*'
                      liquidity: '*'
                allAccountsSupportSomeCapabilities:
                  summary: All accounts support only balances and accounts capabilities
                  value:
                    version: 1.2.0
                    components:
                      accounts: '*'
                      balances: '*'
                twoAccountsSupportTransfers:
                  summary: Only two accounts support fiat transfers
                  value:
                    version: 1.2.0
                    components:
                      accounts: '*'
                      balances: '*'
                      transfers:
                        - 6cd2fe1e-d0bc-4fad-a9ba-9384e0fdfdc0
                        - 7885a47b-0719-4448-b59e-3b8497cd1685
                      transfersFiat:
                        - 6cd2fe1e-d0bc-4fad-a9ba-9384e0fdfdc0
                        - 7885a47b-0719-4448-b59e-3b8497cd1685
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /capabilities/assets:
    get:
      operationId: getAdditionalAssets
      summary: Get list of supported additional assets
      description: Returns assets, supported in addition to the predefined national currencies and the native cryptocurrencies.
      tags:
        - capabilities
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
      responses:
        '200':
          description: List of additional assets.
          content:
            application/json:
              schema:
                type: object
                required:
                  - assets
                properties:
                  assets:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetDefinition'
              examples:
                usdcTokens:
                  summary: USDC tokens on various blockchains
                  value:
                    assets:
                      - id: 360de0ad-9ba1-45d5-8074-22453f193d65
                        type: Erc20Token
                        blockchain: Ethereum
                        contractAddress: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
                        name: USDC
                        symbol: USDC
                        description: USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.
                        decimalPlaces: 6
                      - id: 606bce6b-ff15-4704-9390-b9e32a6cfcff
                        type: Erc20Token
                        blockchain: Polygon PoS
                        contractAddress: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174'
                        name: USDC
                        symbol: USDC
                        description: USD Coin is an ERC-20 stablecoin brought to you by Circle and Coinbase. It is issued by regulated and licensed financial institutions that maintain full reserves of the equivalent fiat currency.
                        decimalPlaces: 6
                      - id: 4386cf4d-83b2-4410-96da-0d3919a45506
                        type: StellarToken
                        blockchain: Stellar
                        issuerAddress: GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN
                        stellarCurrencyCode: USDC
                        name: USDC
                        symbol: USDC
                        description: USDC is a fully collateralized US Dollar stablecoin, based on the open source fiat stablecoin framework developed by Centre.
                        decimalPlaces: 2
                usdcBucket:
                  summary: USDC bucket
                  description: Buckets are used to aggregate various currencies in one balance entry.
                  value:
                    assets:
                      - id: f0844d82-7097-4521-95bc-d843724a893e
                        type: BucketAsset
                        name: USDC
                        symbol: USDC
                        description: Aggregation of all USDC token over the different blockchains.
                        decimalPlaces: 6
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /capabilities/assets/{id}:
    get:
      operationId: getAssetDetails
      summary: Get details of a supported additional asset.
      description: Returns the details of an assets, supported in addition to the predefined national currencies and the native cryptocurrencies.
      tags:
        - capabilities
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/EntityIdPathParam'
      responses:
        '200':
          description: List of additional assets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDefinition'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts:
    get:
      operationId: getAccounts
      summary: Get list of sub-accounts
      tags:
        - accounts
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/AccountBalancesQueryParam'
      responses:
        '200':
          description: List of sub-accounts.
          content:
            application/json:
              schema:
                type: object
                required:
                  - accounts
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}:
    get:
      operationId: getAccountDetails
      summary: Get sub-account details
      tags:
        - accounts
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/AccountBalancesQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of sub-accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/balances:
    get:
      operationId: getBalances
      summary: Get current balances
      tags:
        - balances
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/AssetIdQueryParam'
        - $ref: '#/components/parameters/NationalCurrencyCodeQueryParam'
        - $ref: '#/components/parameters/CryptocurrencySymbolQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of asset balances.
          content:
            application/json:
              schema:
                type: object
                required:
                  - balances
                properties:
                  balances:
                    $ref: '#/components/schemas/Balances'
              examples:
                nationalCurrency:
                  summary: National currency balance
                  value:
                    balances:
                      - id: 4ff63424-7e09-4cdf-b7f1-da7b7c65eabe
                        asset:
                          nationalCurrencyCode: USD
                        availableAmount: '1743.43'
                        lockedAmount: '0'
                blockchainNativeCurrency:
                  summary: Blockchain native currency balance
                  value:
                    balances:
                      - id: 76a33ed9-8aa2-4781-93f8-d2369c0c2b14
                        asset:
                          blockchain: Bitcoin
                          cryptocurrencySymbol: BTC
                        availableAmount: '7.00008214'
                        lockedAmount: '0'
                bucketCurrency:
                  summary: Usage of tokens and buckets in balance
                  description: '`assetId` must be one of the IDs returned by `GET /capabilities/assets`. The ID in this example is the ID of the USDC bucket defined in the example responses of `GET /capabilities/assets`.'
                  value:
                    balances:
                      - id: 6f572d77-2f8d-4962-adf4-de4a62bc236b
                        asset:
                          assetId: f0844d82-7097-4521-95bc-d843724a893e
                        availableAmount: '95.03'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/historic-balances:
    get:
      operationId: getHistoricBalances
      summary: Get balances at specific time in the past
      tags:
        - historicBalances
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/AssetIdQueryParam'
        - $ref: '#/components/parameters/NationalCurrencyCodeQueryParam'
        - $ref: '#/components/parameters/CryptocurrencySymbolQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
        - name: time
          description: Time of the requested balances.
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of asset balances.
          content:
            application/json:
              schema:
                type: object
                required:
                  - balances
                properties:
                  balances:
                    $ref: '#/components/schemas/Balances'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /capabilities/liquidity/quotes:
    get:
      operationId: getQuoteCapabilities
      summary: List possible asset conversions
      tags:
        - capabilities
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
      responses:
        '200':
          description: List of possible asset conversions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteCapabilities'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/liquidity/quotes:
    post:
      operationId: createQuote
      summary: Quote creation request
      description: Either `fromAmount` or `toAmount` must be specified, while the unspecified amount will be populated by the server and returned in the response.
      tags:
        - liquidity
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      requestBody:
        description: Details of the quote request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
      responses:
        '200':
          description: Quote details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    get:
      operationId: getQuotes
      summary: Get list of quotes sorted by creation time
      tags:
        - liquidity
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/ListOrderQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: Quotes details.
          content:
            application/json:
              schema:
                type: object
                required:
                  - quotes
                properties:
                  quotes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/liquidity/quotes/{id}:
    get:
      operationId: getQuoteDetails
      summary: Get quote details
      tags:
        - liquidity
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/EntityIdPathParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: Quote details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/liquidity/quotes/{id}/execute:
    post:
      operationId: executeQuote
      summary: Execute quote
      tags:
        - liquidity
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/EntityIdPathParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: Quote details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /capabilities/trading/books:
    get:
      operationId: getBooks
      summary: List order books
      tags:
        - capabilities
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
      responses:
        '200':
          description: List of order books
          content:
            application/json:
              schema:
                type: object
                required:
                  - books
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderBook'
              example:
                books:
                  - id: BTC/USDC
                    description: Bitcoin book
                    baseAsset:
                      blockchain: Bitcoin
                      cryptocurrencySymbol: BTC
                    quoteAsset:
                      assetId: f0844d82-7097-4521-95bc-d843724a893e
                  - id: GBP/USDC
                    baseAsset:
                      nationalCurrencyCode: GBP
                    quoteAsset:
                      assetId: f0844d82-7097-4521-95bc-d843724a893e
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /trading/books/{id}:
    get:
      operationId: getBookDetails
      summary: Get details of an order book
      tags:
        - trading
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/EntityIdPathParam'
      responses:
        '200':
          description: The specified trading book if it exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderBook'
              examples:
                btcUsdc:
                  summary: BTC/USDC book
                  value:
                    id: BTC/USDC
                    description: Bitcoin book
                    baseAsset:
                      blockchain: Bitcoin
                      cryptocurrencySymbol: BTC
                    quoteAsset:
                      assetId: f0844d82-7097-4521-95bc-d843724a893e
                gbpUsdc:
                  summary: GBP/USDC book
                  value:
                    id: GBP/USDC
                    baseAsset:
                      nationalCurrencyCode: GBP
                    quoteAsset:
                      assetId: f0844d82-7097-4521-95bc-d843724a893e
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /trading/books/{id}/asks:
    get:
      operationId: getBookAsks
      summary: Get active sell orders in an order book
      description: List active sell orders in an order book, sorted ascending by the sell price.
      tags:
        - trading
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/EntityIdPathParam'
      responses:
        '200':
          description: Active sell orders.
          content:
            application/json:
              schema:
                type: object
                required:
                  - asks
                properties:
                  asks:
                    type: array
                    items:
                      $ref: '#/components/schemas/MarketEntry'
              examples:
                btcUsdc:
                  summary: Asks for the BTC/USDC book
                  value:
                    asks:
                      - id: EADAC726-414B-4C5B-B26A-8A616446BDB0
                        price: '29312.03'
                        amount: '9.21634'
                        totalPrice: '270149.63'
                        side: SELL
                      - id: 23631CE5-123B-4163-A6CD-6BF3CE5521C6
                        price: '29315.97'
                        amount: '22.33346'
                        totalPrice: '654727.04'
                        side: SELL
                      - id: 375C2D0A-2874-4FCE-A860-068856D05A87
                        price: '29316.95'
                        amount: '9.30764'
                        totalPrice: '272871.62'
                        side: SELL
                      - id: E577CE57-57BE-49F4-ACA9-DA8EA0F560BD
                        price: '29317.14'
                        amount: '7.56552'
                        totalPrice: '221799.41'
                        side: SELL
                      - id: E776FAF0-B9BB-414B-8519-CB01D088FAC2
                        price: '29317.38'
                        amount: '9.87465'
                        totalPrice: '289498.87'
                        side: SELL
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /trading/books/{id}/bids:
    get:
      operationId: getBookBids
      summary: Get active buy orders in an order book
      description: List active buy orders in an order book, sorted descending by the buy price.
      tags:
        - trading
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/EntityIdPathParam'
      responses:
        '200':
          description: Active buy orders.
          content:
            application/json:
              schema:
                type: object
                required:
                  - bids
                properties:
                  bids:
                    type: array
                    items:
                      $ref: '#/components/schemas/MarketEntry'
              examples:
                btcUsdc:
                  summary: Bids for the BTC/USDC book
                  value:
                    bids:
                      - id: 92946569-74FE-42BD-9898-CBD03A5D407B
                        price: '29312.03'
                        amount: '9.21634'
                        totalPrice: '270149.63'
                        side: BUY
                      - id: F69C17BB-9E2A-4159-8938-8B142F55B4BE
                        price: '29310.42'
                        amount: '0.00091'
                        totalPrice: '26.67'
                        side: BUY
                      - id: E7042B8A-D467-4144-AC53-92C4A96C2A84
                        price: '29310.35'
                        amount: '0.027'
                        totalPrice: '791.38'
                        side: BUY
                      - id: 6A3444BC-34D1-411B-B505-ADE557307C62
                        price: '29310.34'
                        amount: '0.4275'
                        totalPrice: '12530.17'
                        side: BUY
                      - id: 27C49660-AC51-409D-A6C9-5E5BB0FFFACE
                        price: '29310.27'
                        amount: '0.01412'
                        totalPrice: '413.86'
                        side: BUY
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /trading/books/{id}/history:
    get:
      operationId: getBookOrderHistory
      summary: List fulfilled orders in an order book
      description: List fulfilled orders in an order book, sorted descending by the fulfillment time.
      tags:
        - trading
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/EntityIdPathParam'
      responses:
        '200':
          description: List of fulfilled trades.
          content:
            application/json:
              schema:
                type: object
                required:
                  - trades
                properties:
                  trades:
                    type: array
                    items:
                      $ref: '#/components/schemas/MarketTrade'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/trading/orders:
    get:
      operationId: getOrders
      summary: List trading orders
      description: List trading orders sorted descending by the creation time.
      tags:
        - trading
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                type: object
                required:
                  - orders
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    post:
      operationId: createOrder
      summary: Create a new trading order
      description: '`quoteAssetPrice` must be specified for limit orders, but cannot be used in market orders.'
      tags:
        - trading
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      requestBody:
        description: Order details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
            examples:
              limitSellOrder:
                summary: Sell 10 BTC for 20,000 USDC each, at most
                value:
                  idempotencyKey: 03449d61-0966-481e-b12c-df651451c258
                  bookId: BTC_USDC
                  side: SELL
                  orderType: LIMIT
                  timeInForce: GOOD_TILL_CANCELED
                  baseAssetQuantity: '10'
                  quoteAssetPrice: '20000'
              limitBuyOrder:
                summary: Buy 1 BTC for at most 20,000 USDC
                value:
                  idempotencyKey: 03449d61-0966-481e-b12c-df651451c258
                  bookId: BTC_USDC
                  side: BUY
                  orderType: LIMIT
                  timeInForce: GOOD_TILL_CANCELED
                  quoteAssetPrice: '20000'
                  baseAssetQuantity: '1'
              marketBuyOrder:
                summary: Buy BTC at the market price for 200,000 USDC in total
                value:
                  idempotencyKey: 03449d61-0966-481e-b12c-df651451c258
                  bookId: BTC_USDC
                  side: BUY
                  orderType: MARKET
                  timeInForce: GOOD_TILL_CANCELED
                  baseAssetQuantity: '1'
              marketSellOrder:
                summary: Sell 10 BTC at the market
                value:
                  idempotencyKey: 03449d61-0966-481e-b12c-df651451c258
                  bookId: BTC_USDC
                  side: SELL
                  orderType: MARKET
                  timeInForce: GOOD_TILL_CANCELED
                  baseAssetQuantity: '10'
      responses:
        '200':
          description: Newly created book order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              example:
                id: cf091554-f2b8-4cea-9783-2a7e5065b549
                status: TRADING
                bookId: BTC_USDC
                side: SELL
                orderType: LIMIT
                timeInForce: GOOD_TILL_CANCELED
                baseAssetQuantity: '10'
                quoteAssetPrice: '20000'
                createdAt: 2023-06-02T19:45:26.550Z
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/trading/orders/{id}:
    get:
      operationId: getOrderDetails
      summary: Get trading order details
      tags:
        - trading
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
        - $ref: '#/components/parameters/EntityIdPathParam'
      responses:
        '200':
          description: Book order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithTrades'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      operationId: cancelOrder
      summary: Cancel an active trading order
      tags:
        - trading
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
        - $ref: '#/components/parameters/EntityIdPathParam'
      responses:
        '200':
          description: Order canceled.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/capabilities/transfers/withdrawals:
    get:
      operationId: getWithdrawalMethods
      summary: Get list of supported withdrawal methods
      tags:
        - capabilities
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of withdrawal methods for account.
          content:
            application/json:
              schema:
                type: object
                required:
                  - capabilities
                properties:
                  capabilities:
                    type: array
                    items:
                      $ref: '#/components/schemas/WithdrawalCapability'
              examples:
                allUsdcToBucket:
                  summary: USDCs withdrawals
                  description: |-
                    This response indicates that all USD and USDC bucket balances could be withdrawn using the USDC tokens on the various blockchains. The USD balance  can be specified directly while token and bucket balances must be defined  in `GET /capabilities/assets` and referenced using their IDs.
                    The asset IDs in this example are the same IDs used in the examples of `GET /capabilities/assets`.
                  value:
                    capabilities:
                      - id: 16b8b2c3-bd61-4745-9c48-3d30c2bc6907
                        withdrawal:
                          asset:
                            assetId: 360de0ad-9ba1-45d5-8074-22453f193d65
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          nationalCurrencyCode: USD
                      - id: 55f184db-9860-4ed7-9db7-7cded54ef0f4
                        withdrawal:
                          asset:
                            assetId: 606bce6b-ff15-4704-9390-b9e32a6cfcff
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          nationalCurrencyCode: USD
                      - id: 68fb13d5-48ff-42d8-8273-1658a9b49082
                        withdrawal:
                          asset:
                            assetId: 4386cf4d-83b2-4410-96da-0d3919a45506
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          nationalCurrencyCode: USD
                      - id: d625f8e7-f8aa-4288-9f39-54fecf024c9a
                        withdrawal:
                          asset:
                            assetId: 360de0ad-9ba1-45d5-8074-22453f193d65
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          assetId: f0844d82-7097-4521-95bc-d843724a893e
                      - id: e1fb5c58-c4c5-4358-9781-1c52edf1f2f7
                        withdrawal:
                          asset:
                            assetId: 606bce6b-ff15-4704-9390-b9e32a6cfcff
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          assetId: f0844d82-7097-4521-95bc-d843724a893e
                      - id: 19e6770f-71a9-483b-9d9f-7054ea2dc832
                        withdrawal:
                          asset:
                            assetId: 4386cf4d-83b2-4410-96da-0d3919a45506
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          assetId: f0844d82-7097-4521-95bc-d843724a893e
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/capabilities/transfers/deposits:
    get:
      operationId: getDepositMethods
      summary: Get list of supported deposit methods
      tags:
        - capabilities
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of deposit methods for account.
          content:
            application/json:
              schema:
                type: object
                required:
                  - capabilities
                properties:
                  capabilities:
                    type: array
                    items:
                      $ref: '#/components/schemas/DepositCapability'
              examples:
                allUsdcToBucket:
                  summary: USDCs deposit into a bucket or USD
                  description: |-
                    This response indicates that all USDC token on the various blockchains could be deposited either into the USDC bucket balance or into the USD balance. The USD balance can be specified directly while token and bucket balances must be defined in `GET /capabilities/assets` and referenced using their IDs.
                    The asset IDs in this example are the same IDs used in the examples of `GET /capabilities/assets`.
                  value:
                    capabilities:
                      - id: 29d7d25a-ed05-479a-9cde-d50b8203d3ec
                        deposit:
                          asset:
                            assetId: 360de0ad-9ba1-45d5-8074-22453f193d65
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          nationalCurrencyCode: USD
                        addressCreationPolicy: CanCreate
                      - id: adfc2457-1bb7-40d0-9d46-3cfa2dd3a7e1
                        deposit:
                          asset:
                            assetId: 606bce6b-ff15-4704-9390-b9e32a6cfcff
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          nationalCurrencyCode: USD
                        addressCreationPolicy: CanCreate
                      - id: eda3dbb8-ef94-400e-8a6b-2a38302b9505
                        deposit:
                          asset:
                            assetId: 4386cf4d-83b2-4410-96da-0d3919a45506
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          nationalCurrencyCode: USD
                        addressCreationPolicy: CannotCreate
                      - id: b9f471f0-4920-464f-9c6a-97929cc31950
                        deposit:
                          asset:
                            assetId: 360de0ad-9ba1-45d5-8074-22453f193d65
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          assetId: f0844d82-7097-4521-95bc-d843724a893e
                        addressCreationPolicy: CannotCreate
                      - id: 53a36de2-f36f-4301-8292-a0ecc1c32cda
                        deposit:
                          asset:
                            assetId: 606bce6b-ff15-4704-9390-b9e32a6cfcff
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          assetId: f0844d82-7097-4521-95bc-d843724a893e
                        addressCreationPolicy: CanCreate
                      - id: dd59e6d1-c8ca-4499-8b3f-786ce417ed17
                        deposit:
                          asset:
                            assetId: 4386cf4d-83b2-4410-96da-0d3919a45506
                          transferMethod: PublicBlockchain
                        balanceAsset:
                          assetId: f0844d82-7097-4521-95bc-d843724a893e
                        addressCreationPolicy: CanCreate
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/withdrawals:
    get:
      operationId: getWithdrawals
      summary: Get list of withdrawals sorted by creation time
      tags:
        - transfers
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/ListOrderQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          $ref: '#/components/responses/WithdrawalsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/withdrawals/{id}:
    get:
      operationId: getWithdrawalDetails
      summary: Get withdrawal details
      tags:
        - transfers
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/EntityIdPathParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: Withdrawals details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/withdrawals/blockchain:
    get:
      operationId: getBlockchainWithdrawals
      summary: Get list of withdrawals over public blockchains sorted by creation time
      tags:
        - transfersBlockchain
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/ListOrderQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of withdrawals.
          content:
            application/json:
              schema:
                type: object
                required:
                  - withdrawals
                properties:
                  withdrawals:
                    type: array
                    items:
                      $ref: '#/components/schemas/BlockchainWithdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    post:
      operationId: createBlockchainWithdrawal
      summary: Create new withdrawal over public blockchain
      description: Should reject any non blockchain withdrawal request.
      tags:
        - transfersBlockchain
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      requestBody:
        description: Withdrawal details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockchainWithdrawalRequest'
      responses:
        '201':
          description: New withdrawal has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockchainWithdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/withdrawals/fiat:
    get:
      operationId: getFiatWithdrawals
      summary: Get list of fiat withdrawals sorted by creation time
      tags:
        - transfersFiat
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/ListOrderQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of withdrawals.
          content:
            application/json:
              schema:
                type: object
                required:
                  - withdrawals
                properties:
                  withdrawals:
                    type: array
                    items:
                      $ref: '#/components/schemas/FiatWithdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    post:
      operationId: createFiatWithdrawal
      summary: Create new fiat withdrawal
      description: Should reject any non fiat withdrawal request.
      tags:
        - transfersFiat
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      requestBody:
        description: Withdrawal details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FiatWithdrawalRequest'
      responses:
        '201':
          description: New withdrawal has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FiatWithdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/withdrawals/peeraccount:
    get:
      operationId: getPeerAccountWithdrawals
      summary: Get list of withdrawals to peer accounts, sorted by creation time
      tags:
        - transfersPeerAccounts
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/ListOrderQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of withdrawals.
          content:
            application/json:
              schema:
                type: object
                required:
                  - withdrawals
                properties:
                  withdrawals:
                    type: array
                    items:
                      $ref: '#/components/schemas/PeerAccountWithdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    post:
      operationId: createPeerAccountWithdrawal
      summary: Create new withdrawal to a peer account
      description: Should reject any non peer acount withdrawal request.
      tags:
        - transfersPeerAccounts
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      requestBody:
        description: Withdrawal details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeerAccountWithdrawalRequest'
      responses:
        '201':
          description: New withdrawal has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeerAccountWithdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/withdrawals/subaccount:
    get:
      operationId: getSubAccountWithdrawals
      summary: Get list of withdrawals to sub-accounts, sorted by creation time
      tags:
        - transfersInternal
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/ListOrderQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of withdrawals.
          content:
            application/json:
              schema:
                type: object
                required:
                  - withdrawals
                properties:
                  withdrawals:
                    type: array
                    items:
                      $ref: '#/components/schemas/InternalWithdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    post:
      operationId: createSubAccountWithdrawal
      summary: Create new transfer to another sub-account
      description: Transfers assets between different sub-accounts of the same user. Should reject any withdrawals that are not sub-account transfers.
      tags:
        - transfersInternal
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      requestBody:
        description: Withdrawal details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalWithdrawalRequest'
      responses:
        '201':
          description: New withdrawal has been successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalWithdrawal'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/deposits:
    get:
      operationId: getDeposits
      summary: Get list of deposits sorted by creation time
      tags:
        - transfers
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: Deposits details.
          content:
            application/json:
              schema:
                type: object
                required:
                  - deposits
                properties:
                  deposits:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deposit'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/deposits/{id}:
    get:
      operationId: getDepositDetails
      summary: Get deposit details
      tags:
        - transfers
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/EntityIdPathParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of deposits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposit'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/deposits/addresses:
    post:
      operationId: createDepositAddress
      summary: Create new deposit address
      tags:
        - transfers
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      requestBody:
        description: Deposit address details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositAddressCreationRequest'
      responses:
        '200':
          description: New deposit address created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddress'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    get:
      operationId: getDepositAddresses
      summary: Get list of existing deposit addresses
      tags:
        - transfers
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of existing deposit addresses.
          content:
            application/json:
              schema:
                type: object
                required:
                  - addresses
                properties:
                  addresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/DepositAddress'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
  /accounts/{accountId}/transfers/deposits/addresses/{id}:
    get:
      operationId: getDepositAddressDetails
      summary: Get details of a deposit address
      tags:
        - transfers
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/EntityIdPathParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: New deposit address created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddress'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      operationId: disableDepositAddress
      summary: Disable a deposit address
      tags:
        - transfers
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/EntityIdPathParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: Deposit address disabled.
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        4XX:
          $ref: '#/components/responses/ErrorResponse'
        5XX:
          $ref: '#/components/responses/ErrorResponse'
components:
  parameters:
    X-FBAPI-KEY:
      name: X-FBAPI-KEY
      in: header
      required: true
      description: API authentication key.
      schema:
        type: string
    X-FBAPI-TIMESTAMP:
      name: X-FBAPI-TIMESTAMP
      in: header
      required: true
      description: Request timestamp in milliseconds since Unix epoch.
      schema:
        type: number
    X-FBAPI-NONCE:
      name: X-FBAPI-NONCE
      in: header
      required: true
      description: Unique identifier of the request.
      schema:
        type: string
    X-FBAPI-SIGNATURE:
      name: X-FBAPI-SIGNATURE
      in: header
      required: true
      description: |-
        Request signature using the chosen cryptographic algorithm. The signature is to be calculated on concatenation of the following request fields in the specified order:
        - `X-FBAPI-TIMESTAMP` - `X-FBAPI-NONCE` - HTTP request method in upper case - Endpoint path, including the query parameters - Request body
      schema:
        type: string
    EntityIdPathParam:
      name: id
      in: path
      required: true
      description: Entity unique identifier.
      schema:
        type: string
    SubAccountIdPathParam:
      name: accountId
      in: path
      required: true
      description: Sub-account identifier.
      schema:
        type: string
        pattern: ^[A-Za-z0-9_-]+$
    ListOrderQueryParam:
      name: order
      in: query
      description: Controls the order of the items in the returned list.
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
    PaginationLimit:
      name: limit
      in: query
      description: Maximum number of returned items.
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 10
    PaginationStartingAfter:
      name: startingAfter
      in: query
      description: Object ID. Instructs to return the items immediately following this object. Cannot be used together with `endingBefore`.
      schema:
        type: string
    PaginationEndingBefore:
      name: endingBefore
      in: query
      description: Object ID. Instructs to return the items immediately preceding this object. Cannot be used together with `startingAfter`.
      schema:
        type: string
    AssetIdQueryParam:
      name: assetId
      description: ID of one of the assets returned in get-additional-assets. Limits the response to one. Cannot be used in conjunction with cryptocurrencySymbol or nationalCurrencyCode
      in: query
      schema:
        type: string
    NationalCurrencyCodeQueryParam:
      name: nationalCurrencyCode
      description: Limits the response to one asset with the provided NationalCurrencyCode Cannot be used in conjunction with cryptocurrencySymbol or assetId
      in: query
      schema:
        $ref: '#/components/schemas/NationalCurrencyCode'
    CryptocurrencySymbolQueryParam:
      name: cryptocurrencySymbol
      description: Limits the response to one asset with the provided CryptocurrencySymbol Cannot be used in conjunction with nationalCurrencyCode or assetId
      in: query
      schema:
        $ref: '#/components/schemas/CryptocurrencySymbol'
    AccountBalancesQueryParam:
      name: balances
      in: query
      description: Flag to include the account balances in the response. Balances are not returned by default for account endpoints.
      schema:
        type: boolean
  responses:
    BadRequestResponse:
      description: Request could not be processed due to a client error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
    UnauthorizedResponse:
      description: Request is unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    ErrorResponse:
      description: Failed to process request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
    WithdrawalsResponse:
      description: List of withdrawals.
      content:
        application/json:
          schema:
            type: object
            required:
              - withdrawals
            properties:
              withdrawals:
                type: array
                items:
                  $ref: '#/components/schemas/Withdrawal'
  schemas:
    GeneralError:
      description: Should be returned only if there in no more specific object.
      type: object
      required:
        - message
        - errorType
      properties:
        message:
          description: Description of the error.
          type: string
        errorType:
          enum:
            - internal-error
            - not-found
    BadRequestError:
      description: |-
        Request could not be processed due to a client error.
        If the error is caused by a missing or wrong property in the request, `errorType` must have the value `schema-property-error` and the properties  `propertyName` and `requestPart` must be specified. For more general schema errors, the error type should be `schema-error` and `requestPart` must be specified. For all the other cases the error type should be `bad-request`.
      type: object
      required:
        - message
        - errorType
      properties:
        message:
          description: Description of the error.
          type: string
        errorType:
          enum:
            - schema-error
            - schema-property-error
            - bad-request
            - unknown-asset
            - unsupported-conversion
            - quote-not-ready
            - deposit-address-disabled
            - order-not-trading
            - idempotency-key-reuse
            - deposit-address-creation-not-allowed
            - unsupported-transfer-method
        propertyName:
          description: Name of property that caused the error.
          type: string
        requestPart:
          $ref: '#/components/schemas/RequestPart'
    UnauthorizedError:
      description: Request is unauthorized
      type: object
      required:
        - message
        - errorType
      properties:
        message:
          description: Description of the error.
          type: string
        errorType:
          enum:
            - unauthorized
        propertyName:
          description: Name of property that caused the error.
          enum:
            - X-FBAPI-KEY
        requestPart:
          description: Request part where the error occurred.
          enum:
            - headers
    RequestPart:
      description: Request part where the error occurred.
      enum:
        - params
        - body
        - querystring
        - headers
    Capabilities:
      type: object
      required:
        - version
        - components
      properties:
        version:
          description: Version number of the API specification that this server implements
          type: string
          pattern: ^(\d)+\.(\d)+\.(\d)+$
          example: 1.0.37
        components:
          $ref: '#/components/schemas/ApiComponents'
    ApiComponents:
      description: Lists supported API components and which sub-accounts support the component.
      type: object
      required:
        - accounts
        - balances
      properties:
        accounts:
          $ref: '#/components/schemas/AccountsSet'
        balances:
          $ref: '#/components/schemas/AccountsSet'
        historicBalances:
          $ref: '#/components/schemas/AccountsSet'
        transfers:
          $ref: '#/components/schemas/AccountsSet'
        transfersBlockchain:
          $ref: '#/components/schemas/AccountsSet'
        transfersFiat:
          $ref: '#/components/schemas/AccountsSet'
        transfersPeerAccounts:
          $ref: '#/components/schemas/AccountsSet'
        transfersInternal:
          $ref: '#/components/schemas/AccountsSet'
        trading:
          $ref: '#/components/schemas/AccountsSet'
        liquidity:
          $ref: '#/components/schemas/AccountsSet'
    AccountsSet:
      description: Indicates to which sub-accounts an operation applies. The value could be either a list of sub-account IDs or "*". The value "*" indicates all the sub-accounts.
      oneOf:
        - type: string
          pattern: ^\*$
        - type: array
          items:
            type: string
    PositiveAmount:
      type: string
      pattern: ^\d+(\.\d+)?
    AccountStatus:
      type: string
      enum:
        - active
        - inactive
    Account:
      type: object
      required:
        - id
        - title
        - status
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        balances:
          $ref: '#/components/schemas/Balances'
        status:
          $ref: '#/components/schemas/AccountStatus'
    Balances:
      type: array
      description: Maps balance assets to their balances.
      items:
        $ref: '#/components/schemas/AssetBalance'
    AssetBalance:
      type: object
      required:
        - id
        - asset
        - availableAmount
      properties:
        id:
          type: string
        asset:
          $ref: '#/components/schemas/AssetReference'
        availableAmount:
          $ref: '#/components/schemas/PositiveAmount'
        lockedAmount:
          $ref: '#/components/schemas/PositiveAmount'
    AssetCommonProperties:
      type: object
      required:
        - id
        - name
        - symbol
        - type
        - decimalPlaces
      properties:
        id:
          type: string
        name:
          type: string
        symbol:
          type: string
        description:
          type: string
        decimalPlaces:
          type: integer
        testAsset:
          type: boolean
    BucketAsset:
      allOf:
        - $ref: '#/components/schemas/AssetCommonProperties'
        - type: object
          required:
            - type
          properties:
            type:
              enum:
                - BucketAsset
    Erc20Token:
      allOf:
        - $ref: '#/components/schemas/AssetCommonProperties'
        - type: object
          required:
            - blockchain
            - contractAddress
            - type
          properties:
            type:
              enum:
                - Erc20Token
            blockchain:
              $ref: '#/components/schemas/Blockchain'
            contractAddress:
              type: string
      example:
        blockchain: Ethereum
        name: Tether USD
        symbol: USDT
        decimalPlaces: 6
        contractAddress: '0xdAC17F958D2ee523a2206206994597C13D831ec7'
    Bep20Token:
      allOf:
        - $ref: '#/components/schemas/AssetCommonProperties'
        - type: object
          required:
            - blockchain
            - contractAddress
            - type
          properties:
            type:
              enum:
                - Bep20Token
            blockchain:
              $ref: '#/components/schemas/Blockchain'
            contractAddress:
              type: string
    StellarToken:
      allOf:
        - $ref: '#/components/schemas/AssetCommonProperties'
        - type: object
          required:
            - blockchain
            - issuerAddress
            - stellarCurrencyCode
            - type
          properties:
            type:
              enum:
                - StellarToken
            blockchain:
              $ref: '#/components/schemas/Blockchain'
            issuerAddress:
              type: string
            stellarCurrencyCode:
              type: string
    AssetDefinition:
      anyOf:
        - $ref: '#/components/schemas/BucketAsset'
        - $ref: '#/components/schemas/Erc20Token'
        - $ref: '#/components/schemas/Bep20Token'
        - $ref: '#/components/schemas/StellarToken'
    NationalCurrency:
      type: object
      required:
        - nationalCurrencyCode
      properties:
        nationalCurrencyCode:
          $ref: '#/components/schemas/NationalCurrencyCode'
        testAsset:
          type: boolean
    NativeCryptocurrency:
      type: object
      required:
        - cryptocurrencySymbol
      properties:
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        cryptocurrencySymbol:
          $ref: '#/components/schemas/CryptocurrencySymbol'
        testAsset:
          type: boolean
    OtherAssetReference:
      type: object
      required:
        - assetId
      properties:
        assetId:
          description: ID of one of the assets returned in get-additional-assets.
          type: string
    CryptocurrencyReference:
      oneOf:
        - $ref: '#/components/schemas/NativeCryptocurrency'
        - $ref: '#/components/schemas/OtherAssetReference'
    AssetReference:
      oneOf:
        - $ref: '#/components/schemas/NationalCurrency'
        - $ref: '#/components/schemas/NativeCryptocurrency'
        - $ref: '#/components/schemas/OtherAssetReference'
    Blockchain:
      type: string
      enum:
        - Algorand
        - Avalanche
        - Bitcoin
        - BNB
        - Cardano
        - Casper
        - Celo
        - Cosmos
        - Cronos
        - Dogecoin
        - Ethereum
        - Ethereum Classic
        - Hedera
        - Litecoin
        - Monero
        - Polygon PoS
        - Polkadot
        - Solana
        - Stellar
        - Tezos
        - TRON
        - XRP
    Layer1Cryptocurrency:
      type: string
      enum:
        - ADA
        - ALGO
        - ATOM
        - AVAX
        - BNB
        - BTC
        - CELO
        - CRO
        - CSPR
        - DOGE
        - DOT
        - ETC
        - ETH
        - HBAR
        - LTC
        - SOL
        - TRX
        - XLM
        - XMR
        - XRP
        - XTZ
    Layer2Cryptocurrency:
      type: string
      enum:
        - ARB
        - IMX
        - MATIC
        - SNX
    CryptocurrencySymbol:
      anyOf:
        - $ref: '#/components/schemas/Layer1Cryptocurrency'
        - $ref: '#/components/schemas/Layer2Cryptocurrency'
    NationalCurrencyCode:
      type: string
      description: National currency codes as defined in ISO 4217.
      enum:
        - ADP
        - AED
        - AFA
        - AFN
        - ALK
        - ALL
        - AMD
        - ANG
        - AOA
        - AOK
        - AON
        - AOR
        - ARA
        - ARP
        - ARS
        - ARY
        - ATS
        - AUD
        - AWG
        - AYM
        - AZM
        - BAD
        - BAM
        - BBD
        - BDT
        - BEC
        - BEF
        - BEL
        - BGJ
        - BGK
        - BGL
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOP
        - BOV
        - BRB
        - BRC
        - BRE
        - BRL
        - BRN
        - BRR
        - BSD
        - BTN
        - BUK
        - BWP
        - BYB
        - BYN
        - BYR
        - BZD
        - CAD
        - CDF
        - CHC
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CSD
        - CSJ
        - CSK
        - CUC
        - CUP
        - CVE
        - CYP
        - CZK
        - DDM
        - DEM
        - DJF
        - DKK
        - DOP
        - DZD
        - ECS
        - ECV
        - EEK
        - EGP
        - ERN
        - ESA
        - ESB
        - ESP
        - ETB
        - EUR
        - FIM
        - FJD
        - FKP
        - FRF
        - GBP
        - GEK
        - GEL
        - GHC
        - GHP
        - GHS
        - GIP
        - GMD
        - GNE
        - GNF
        - GNS
        - GQE
        - GRD
        - GTQ
        - GWE
        - GWP
        - GYD
        - HKD
        - HNL
        - HRD
        - HRK
        - HTG
        - HUF
        - IDR
        - IEP
        - ILP
        - ILR
        - ILS
        - INR
        - IQD
        - IRR
        - ISJ
        - ISK
        - ITL
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAJ
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LSM
        - LTL
        - LTT
        - LUC
        - LUF
        - LUL
        - LVL
        - LVR
        - LYD
        - MAD
        - MDL
        - MGA
        - MGF
        - MKD
        - MLF
        - MMK
        - MNT
        - MOP
        - MRO
        - MRU
        - MTL
        - MTP
        - MUR
        - MVQ
        - MVR
        - MWK
        - MXN
        - MXP
        - MXV
        - MYR
        - MZE
        - MZM
        - NAD
        - NGN
        - NIC
        - NIO
        - NLG
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEH
        - PEI
        - PEN
        - PES
        - PGK
        - PHP
        - PKR
        - PLN
        - PLZ
        - PTE
        - PYG
        - QAR
        - RHD
        - ROK
        - ROL
        - RON
        - RSD
        - RUB
        - RUR
        - RWF
        - SAR
        - SBD
        - SCR
        - SDD
        - SDG
        - SDP
        - SEK
        - SGD
        - SHP
        - SIT
        - SKK
        - SLL
        - SOS
        - SRD
        - SRG
        - SSP
        - STD
        - STN
        - SUR
        - SVC
        - SYP
        - SZL
        - THB
        - TJR
        - TJS
        - TMM
        - TMT
        - TND
        - TOP
        - TPE
        - TRL
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UAK
        - UGS
        - UGW
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYN
        - UYP
        - UYU
        - UYW
        - UZS
        - VEB
        - VEF
        - VES
        - VNC
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XOF
        - XPF
        - XSU
        - XTS
        - XUA
        - XXX
        - YDD
        - YER
        - YUD
        - YUM
        - YUN
        - ZAL
        - ZAR
        - ZMK
        - ZMW
        - ZRN
        - ZRZ
        - ZWC
        - ZWD
        - ZWL
        - ZWN
        - ZWR
    QuoteCapability:
      type: object
      required:
        - id
        - fromAsset
        - toAsset
      properties:
        id:
          type: string
        fromAsset:
          $ref: '#/components/schemas/AssetReference'
        toAsset:
          $ref: '#/components/schemas/AssetReference'
    QuoteCapabilities:
      type: object
      required:
        - capabilities
      properties:
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/QuoteCapability'
    QuoteStatus:
      type: string
      enum:
        - ready
        - executing
        - executed
        - expired
    QuoteRequest:
      type: object
      allOf:
        - type: object
          required:
            - fromAsset
            - toAsset
          properties:
            fromAsset:
              $ref: '#/components/schemas/AssetReference'
            toAsset:
              $ref: '#/components/schemas/AssetReference'
        - oneOf:
            - type: object
              required:
                - fromAmount
              properties:
                fromAmount:
                  $ref: '#/components/schemas/PositiveAmount'
            - type: object
              required:
                - toAmount
              properties:
                toAmount:
                  $ref: '#/components/schemas/PositiveAmount'
    Quote:
      type: object
      required:
        - id
        - fromAsset
        - fromAmount
        - toAsset
        - toAmount
        - conversionFeeBps
        - status
        - createdAt
        - expiresAt
      properties:
        id:
          type: string
        fromAsset:
          $ref: '#/components/schemas/AssetReference'
        fromAmount:
          $ref: '#/components/schemas/PositiveAmount'
        toAsset:
          $ref: '#/components/schemas/AssetReference'
        toAmount:
          $ref: '#/components/schemas/PositiveAmount'
        conversionFeeBps:
          type: integer
          description: Conversion fee in basis points.
        status:
          $ref: '#/components/schemas/QuoteStatus'
        createdAt:
          description: Quote creation time.
          type: string
          format: date-time
        expiresAt:
          description: Quote expiration time.
          type: string
          format: date-time
    OrderBook:
      type: object
      required:
        - id
        - baseAsset
        - quoteAsset
      properties:
        id:
          type: string
        description:
          type: string
        baseAsset:
          $ref: '#/components/schemas/AssetReference'
        quoteAsset:
          $ref: '#/components/schemas/AssetReference'
    MarketEntry:
      type: object
      required:
        - id
        - amount
        - price
        - totalPrice
        - side
      properties:
        id:
          type: string
        amount:
          allOf:
            - $ref: '#/components/schemas/PositiveAmount'
          description: Amount of the base asset traded
        price:
          $ref: '#/components/schemas/PositiveAmount'
        totalPrice:
          $ref: '#/components/schemas/PositiveAmount'
        side:
          $ref: '#/components/schemas/OrderSide'
    MarketTrade:
      type: object
      allOf:
        - $ref: '#/components/schemas/MarketEntry'
        - type: object
          required:
            - finalizedAt
          properties:
            finalizedAt:
              description: Time when the trade was finalized.
              type: string
              format: date-time
    OrderCommonProperties:
      allOf:
        - type: object
          required:
            - bookId
            - side
            - timeInForce
            - baseAssetQuantity
          properties:
            bookId:
              description: ID of the order book.
              type: string
            side:
              $ref: '#/components/schemas/OrderSide'
            timeInForce:
              $ref: '#/components/schemas/OrderTimeInForce'
            baseAssetQuantity:
              $ref: '#/components/schemas/PositiveAmount'
    OrderSide:
      enum:
        - SELL
        - BUY
    OrderTimeInForce:
      enum:
        - GOOD_TILL_CANCELED
        - FILL_OR_KILL
        - IMMEDIATE_OR_CANCEL
    LimitOrderData:
      allOf:
        - $ref: '#/components/schemas/OrderCommonProperties'
        - type: object
          required:
            - orderType
            - quoteAssetPrice
          properties:
            orderType:
              enum:
                - LIMIT
            quoteAssetPrice:
              $ref: '#/components/schemas/PositiveAmount'
    MarketOrderData:
      allOf:
        - $ref: '#/components/schemas/OrderCommonProperties'
        - type: object
          required:
            - orderType
          properties:
            orderType:
              enum:
                - MARKET
    OrderData:
      oneOf:
        - $ref: '#/components/schemas/LimitOrderData'
        - $ref: '#/components/schemas/MarketOrderData'
    OrderRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/OrderData'
        - type: object
          required:
            - idempotencyKey
          properties:
            idempotencyKey:
              type: string
    Order:
      allOf:
        - $ref: '#/components/schemas/OrderData'
        - type: object
          required:
            - id
            - status
            - createdAt
          properties:
            id:
              type: string
            status:
              $ref: '#/components/schemas/OrderStatus'
            createdAt:
              description: Time when the order was created.
              type: string
              format: date-time
            finalizedAt:
              description: Time when the order was finalized.
              type: string
              format: date-time
    OrderWithTrades:
      allOf:
        - $ref: '#/components/schemas/Order'
        - type: object
          required:
            - trades
          properties:
            trades:
              type: array
              items:
                $ref: '#/components/schemas/MarketTrade'
    OrderStatus:
      enum:
        - TRADING
        - CANCELED
        - REJECTED
        - EXPIRED
        - FULFILLED
    AccountHolderDetails:
      type: object
      required:
        - name
      properties:
        name:
          description: Full name of the account holder.
          type: string
        city:
          type: string
        country:
          description: Country code, as specified in ISO 3166-1 alpha-2.
          type: string
        subdivision:
          description: Country administrative subdivision, as specified in ISO 3166-2.
          type: string
        address:
          description: Account holder street address.
          type: string
        postalCode:
          type: string
    Iban:
      type: string
      pattern: ^[A-Z]{2}\d{2}[a-zA-Z0-9]{1,30}$
    IbanCapability:
      type: object
      required:
        - asset
        - transferMethod
      properties:
        asset:
          $ref: '#/components/schemas/NationalCurrency'
        transferMethod:
          enum:
            - Iban
    IbanAddress:
      allOf:
        - $ref: '#/components/schemas/IbanCapability'
        - type: object
          required:
            - accountHolder
            - iban
          properties:
            accountHolder:
              $ref: '#/components/schemas/AccountHolderDetails'
            iban:
              $ref: '#/components/schemas/Iban'
    IbanTransferDestination:
      allOf:
        - $ref: '#/components/schemas/IbanAddress'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/PositiveAmount'
    IbanTransfer:
      allOf:
        - $ref: '#/components/schemas/IbanTransferDestination'
        - type: object
          properties:
            referenceId:
              type: string
    SwiftCode:
      type: string
      pattern: ^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$
    SwiftCapability:
      type: object
      required:
        - asset
        - transferMethod
      properties:
        asset:
          $ref: '#/components/schemas/NationalCurrency'
        transferMethod:
          enum:
            - Swift
    SwiftAddress:
      allOf:
        - $ref: '#/components/schemas/SwiftCapability'
        - type: object
          required:
            - accountHolder
            - swiftCode
            - routingNumber
          properties:
            accountHolder:
              $ref: '#/components/schemas/AccountHolderDetails'
            swiftCode:
              $ref: '#/components/schemas/SwiftCode'
            routingNumber:
              type: string
              description: Routing number identifying the bank account.
    SwiftTransferDestination:
      allOf:
        - $ref: '#/components/schemas/SwiftAddress'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/PositiveAmount'
    SwiftTransfer:
      allOf:
        - $ref: '#/components/schemas/SwiftTransferDestination'
        - type: object
          properties:
            referenceId:
              type: string
    OtherFiatTransfer:
      type: object
      description: Used for historic fiat transfers that do not fit a more specific transfer method.  It is impossible to create new deposits or withdrawal of this type using this API.
      required:
        - transferMethod
        - asset
        - amount
        - description
      properties:
        transferMethod:
          enum:
            - OtherFiat
        asset:
          $ref: '#/components/schemas/NationalCurrency'
        amount:
          $ref: '#/components/schemas/PositiveAmount'
        description:
          type: string
        tag:
          type: string
        referenceId:
          type: string
    PublicBlockchainCapability:
      type: object
      required:
        - asset
        - transferMethod
      properties:
        asset:
          $ref: '#/components/schemas/CryptocurrencyReference'
        transferMethod:
          enum:
            - PublicBlockchain
    PublicBlockchainAddress:
      allOf:
        - $ref: '#/components/schemas/PublicBlockchainCapability'
        - type: object
          required:
            - address
          properties:
            address:
              type: string
            addressTag:
              type: string
    PublicBlockchainTransactionDestination:
      type: object
      allOf:
        - $ref: '#/components/schemas/PublicBlockchainAddress'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/PositiveAmount'
    PublicBlockchainTransaction:
      type: object
      allOf:
        - $ref: '#/components/schemas/PublicBlockchainTransactionDestination'
        - type: object
          properties:
            blockchainTxId:
              type: string
    PeerAccountTransferCapability:
      type: object
      required:
        - asset
        - transferMethod
      properties:
        asset:
          $ref: '#/components/schemas/AssetReference'
        transferMethod:
          enum:
            - PeerAccountTransfer
    InternalTransferCapability:
      type: object
      required:
        - asset
        - transferMethod
      properties:
        asset:
          $ref: '#/components/schemas/AssetReference'
        transferMethod:
          enum:
            - InternalTransfer
    PeerAccountTransferAddress:
      type: object
      allOf:
        - $ref: '#/components/schemas/PeerAccountTransferCapability'
        - type: object
          required:
            - accountId
          properties:
            accountId:
              type: string
    PeerAccountTransferDestination:
      type: object
      allOf:
        - $ref: '#/components/schemas/PeerAccountTransferAddress'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/PositiveAmount'
    InternalTransferAddress:
      type: object
      allOf:
        - $ref: '#/components/schemas/InternalTransferCapability'
        - type: object
          required:
            - accountId
          properties:
            accountId:
              type: string
    InternalTransferDestination:
      type: object
      allOf:
        - $ref: '#/components/schemas/InternalTransferAddress'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/PositiveAmount'
    PeerAccountTransfer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PeerAccountTransferDestination'
        - type: object
          properties:
            referenceId:
              type: string
    InternalTransfer:
      type: object
      allOf:
        - $ref: '#/components/schemas/InternalTransferDestination'
    TransferCapability:
      oneOf:
        - $ref: '#/components/schemas/PeerAccountTransferCapability'
        - $ref: '#/components/schemas/InternalTransferCapability'
        - $ref: '#/components/schemas/PublicBlockchainCapability'
        - $ref: '#/components/schemas/IbanCapability'
        - $ref: '#/components/schemas/SwiftCapability'
    FiatTransferDestination:
      oneOf:
        - $ref: '#/components/schemas/IbanTransferDestination'
        - $ref: '#/components/schemas/SwiftTransferDestination'
    FiatTransfer:
      oneOf:
        - $ref: '#/components/schemas/IbanTransfer'
        - $ref: '#/components/schemas/SwiftTransfer'
        - $ref: '#/components/schemas/OtherFiatTransfer'
    Transfer:
      oneOf:
        - $ref: '#/components/schemas/PeerAccountTransfer'
        - $ref: '#/components/schemas/InternalTransfer'
        - $ref: '#/components/schemas/PublicBlockchainTransaction'
        - $ref: '#/components/schemas/IbanTransfer'
        - $ref: '#/components/schemas/SwiftTransfer'
        - $ref: '#/components/schemas/OtherFiatTransfer'
    DepositDestination:
      oneOf:
        - $ref: '#/components/schemas/PublicBlockchainAddress'
        - $ref: '#/components/schemas/IbanAddress'
        - $ref: '#/components/schemas/SwiftAddress'
    DepositAddressStatus:
      enum:
        - enabled
        - disabled
    DepositAddress:
      type: object
      required:
        - id
        - destination
        - status
      properties:
        id:
          type: string
        destination:
          $ref: '#/components/schemas/DepositDestination'
        status:
          $ref: '#/components/schemas/DepositAddressStatus'
    DepositAddressCreationRequest:
      type: object
      required:
        - idempotencyKey
        - transferMethod
      properties:
        idempotencyKey:
          type: string
        transferMethod:
          oneOf:
            - $ref: '#/components/schemas/PublicBlockchainCapability'
            - $ref: '#/components/schemas/IbanCapability'
            - $ref: '#/components/schemas/SwiftCapability'
    DepositCapability:
      type: object
      description: Capability to deposit to a balance asset using a specific transfer capability. `addressCreationPolicy` determines whether new deposit addresses could be requested for this deposit capability.
      required:
        - id
        - deposit
        - balanceAsset
        - addressCreationPolicy
      properties:
        id:
          type: string
        deposit:
          oneOf:
            - $ref: '#/components/schemas/PublicBlockchainCapability'
            - $ref: '#/components/schemas/IbanCapability'
            - $ref: '#/components/schemas/SwiftCapability'
        balanceAsset:
          $ref: '#/components/schemas/AssetReference'
        addressCreationPolicy:
          $ref: '#/components/schemas/DepositAddressCreationPolicy'
    Deposit:
      type: object
      required:
        - id
        - balanceAsset
        - balanceAmount
        - source
        - status
        - createdAt
      properties:
        id:
          type: string
        balanceAsset:
          $ref: '#/components/schemas/AssetReference'
        balanceAmount:
          $ref: '#/components/schemas/PositiveAmount'
        source:
          $ref: '#/components/schemas/Transfer'
        depositAddressId:
          type: string
          description: ID of the deposit address, created by posting /transfers/deposits/addresses
        status:
          $ref: '#/components/schemas/DepositStatus'
        createdAt:
          description: Time when the deposit was created.
          type: string
          format: date-time
        finalizedAt:
          description: Time when the deposit reached a final state.
          type: string
          format: date-time
    WithdrawalCapability:
      type: object
      description: Capability to withdraw a balance asset using a specific transfer capability. `minWithdrawalAmount` is the minimum amount of the balance currency that can be withdrawn using this capability. If `minWithdrawalAmount` is not specified, it will be assumed that the minimum withdrawal amount is zero.
      required:
        - id
        - withdrawal
        - balanceAsset
      properties:
        id:
          type: string
        withdrawal:
          $ref: '#/components/schemas/TransferCapability'
        balanceAsset:
          $ref: '#/components/schemas/AssetReference'
        minWithdrawalAmount:
          $ref: '#/components/schemas/PositiveAmount'
    WithdrawalRequestCommonProperties:
      type: object
      required:
        - idempotencyKey
        - balanceAmount
      properties:
        idempotencyKey:
          type: string
        balanceAmount:
          $ref: '#/components/schemas/PositiveAmount'
    FiatWithdrawalRequest:
      allOf:
        - $ref: '#/components/schemas/WithdrawalRequestCommonProperties'
        - type: object
          required:
            - balanceAsset
            - destination
          properties:
            balanceAsset:
              $ref: '#/components/schemas/AssetReference'
            destination:
              $ref: '#/components/schemas/FiatTransferDestination'
    BlockchainWithdrawalRequest:
      allOf:
        - $ref: '#/components/schemas/WithdrawalRequestCommonProperties'
        - type: object
          required:
            - balanceAsset
            - destination
          properties:
            balanceAsset:
              $ref: '#/components/schemas/AssetReference'
            destination:
              $ref: '#/components/schemas/PublicBlockchainTransactionDestination'
    PeerAccountWithdrawalRequest:
      allOf:
        - $ref: '#/components/schemas/WithdrawalRequestCommonProperties'
        - type: object
          required:
            - balanceAsset
            - destination
          properties:
            balanceAsset:
              $ref: '#/components/schemas/AssetReference'
            destination:
              $ref: '#/components/schemas/PeerAccountTransferDestination'
    InternalWithdrawalRequest:
      allOf:
        - $ref: '#/components/schemas/WithdrawalRequestCommonProperties'
        - type: object
          required:
            - balanceAsset
            - destination
          properties:
            balanceAsset:
              $ref: '#/components/schemas/AssetReference'
            destination:
              $ref: '#/components/schemas/InternalTransferDestination'
    WithdrawalCommonProperties:
      type: object
      required:
        - id
        - balanceAsset
        - balanceAmount
        - status
        - createdAt
      properties:
        id:
          type: string
        balanceAsset:
          $ref: '#/components/schemas/AssetReference'
        balanceAmount:
          $ref: '#/components/schemas/PositiveAmount'
        status:
          $ref: '#/components/schemas/WithdrawalStatus'
        createdAt:
          description: Time when the withdrawal was created.
          type: string
          format: date-time
        finalizedAt:
          description: Time when the withdrawal reached a final state.
          type: string
          format: date-time
        events:
          type: array
          items:
            $ref: '#/components/schemas/WithdrawalEvent'
    FiatWithdrawal:
      allOf:
        - $ref: '#/components/schemas/WithdrawalCommonProperties'
        - type: object
          required:
            - destination
          properties:
            destination:
              $ref: '#/components/schemas/FiatTransfer'
    BlockchainWithdrawal:
      allOf:
        - $ref: '#/components/schemas/WithdrawalCommonProperties'
        - type: object
          required:
            - destination
          properties:
            destination:
              $ref: '#/components/schemas/PublicBlockchainTransaction'
    PeerAccountWithdrawal:
      allOf:
        - $ref: '#/components/schemas/WithdrawalCommonProperties'
        - type: object
          required:
            - destination
          properties:
            destination:
              $ref: '#/components/schemas/PeerAccountTransfer'
    InternalWithdrawal:
      allOf:
        - $ref: '#/components/schemas/WithdrawalCommonProperties'
        - type: object
          required:
            - destination
          properties:
            destination:
              $ref: '#/components/schemas/InternalTransfer'
    Withdrawal:
      oneOf:
        - $ref: '#/components/schemas/PeerAccountWithdrawal'
        - $ref: '#/components/schemas/InternalWithdrawal'
        - $ref: '#/components/schemas/BlockchainWithdrawal'
        - $ref: '#/components/schemas/FiatWithdrawal'
    WithdrawalEvent:
      type: object
      description: Describes an event during withdrawal processing. The granularity and verbosity of the events it at the discretion of the API implementor.
      required:
        - status
        - message
        - createdAt
      properties:
        status:
          $ref: '#/components/schemas/WithdrawalStatus'
        message:
          type: string
        createdAt:
          description: Time when the withdrawal was created.
          type: string
          format: date-time
    DepositStatus:
      enum:
        - pending
        - succeeded
        - failed
    WithdrawalStatus:
      enum:
        - pending
        - succeeded
        - failed
    DepositAddressCreationPolicy:
      enum:
        - CanCreate
        - CannotCreate
  securitySchemes: {}
