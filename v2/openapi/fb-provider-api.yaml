openapi: 3.0.0
servers:
  - description: Local server
    url: http://0.0.0.0:8000
info:
  title: 'Fireblocks Provider Connectivity API v2'
  version: 0.3.1
  x-logo:
    url: 'https://drive.google.com/uc?id=1sseKokeIoh7hnUpV8skWYF_VzncF3slT'
    altText: 'Fireblocks logo'

  contact:
    name: Fireblocks
    url: https://fireblocks.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

  description:
    Placeholder for automatic documentation injection from README.md

tags:
  - name: capabilities
    description: Server capabilities discovery operations.
  - name: accounts
    description: User accounts management operations.
  - name: balances
    description: Balances management operations.
  - name: historicBalances
    description: Historic balances operations.

paths:
  /capabilities:
    get:
      operationId: getCapabilities
      summary: Describe server capabilities
      description: >-
        Returns the API version and all the capabilities that the server supports.  
          
        The capabilities are specified as a map. The map keys are the capability
        names and the values are lists of account IDs. If all the accounts support
        a capability, an asterisk could be used, instead of listing all the accounts.
      tags: [ capabilities ]
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
      responses:
        '200':
          description: >-
            Server capability details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capabilities'
              examples:
                allAccountsSupportAllCapabilities:
                  summary: All accounts support all capabilities
                  value:
                    version: "1.0.37"
                    components:
                      accounts: "*"
                      balances: "*"
                      transfers: "*"
                      transfersBlockchain: "*"
                      transfersFiat: "*"
                      transfersPeerAccounts: "*"
                      trading: "*"
                      liquidity: "*"
                allAccountsSupportSomeCapabilities:
                  summary: All accounts support only balances and accounts capabilities
                  value:
                    version: "1.2.0"
                    components:
                      accounts: "*"
                      balances: "*"
                twoAccountsSupportTransfers:
                  summary: Only two accounts support fiat transfers
                  value:
                    version: "1.2.0"
                    components:
                      accounts: "*"
                      balances: "*"
                      transfers:
                        - "6cd2fe1e-d0bc-4fad-a9ba-9384e0fdfdc0"
                        - "7885a47b-0719-4448-b59e-3b8497cd1685"
                      transfersFiat:
                        - "6cd2fe1e-d0bc-4fad-a9ba-9384e0fdfdc0"
                        - "7885a47b-0719-4448-b59e-3b8497cd1685"
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/components/responses/ErrorResponse'
        '5XX':
          $ref: '#/components/responses/ErrorResponse'

  /capabilities/assets:
    get:
      operationId: getAdditionalAssets
      summary: Get list of supported additional assets
      description: >-
        Returns assets, supported in addition to the predefined national
        currencies and the native cryptocurrencies.
      tags: [ capabilities ]
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
      responses:
        '200':
          description: List of additional assets.
          content:
            application/json:
              schema:
                type: object
                required: [assets]
                properties:
                  assets:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetDefinition'
              examples:
                usdcTokens:
                  summary: USDC tokens on various blockchains
                  value:
                    assets: [
                      {
                        "id": "360de0ad-9ba1-45d5-8074-22453f193d65",
                        "type": "Erc20Token",
                        "blockchain": "Ethereum",
                        "contractAddress": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
                        "name": "USDC",
                        "symbol": "USDC",
                        "description": "USDC is a fully collateralized US Dollar stablecoin developed by CENTRE, the open source project with Circle being the first of several forthcoming issuers.",
                        "decimalPlaces": 6,
                      }, {
                        "id": "606bce6b-ff15-4704-9390-b9e32a6cfcff",
                        "type": "Erc20Token",
                        "blockchain": "Polygon PoS",
                        "contractAddress": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
                        "name": "USDC",
                        "symbol": "USDC",
                        "description": "USD Coin is an ERC-20 stablecoin brought to you by Circle and Coinbase. It is issued by regulated and licensed financial institutions that maintain full reserves of the equivalent fiat currency.",
                        "decimalPlaces": 6,
                      }, {
                        "id": "4386cf4d-83b2-4410-96da-0d3919a45506",
                        "type": "StellarToken",
                        "blockchain": "Stellar",
                        "issuerAddress": "GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN",
                        "stellarCurrencyCode": "USDC",
                        "name": "USDC",
                        "symbol": "USDC",
                        "description": "USDC is a fully collateralized US Dollar stablecoin, based on the open source fiat stablecoin framework developed by Centre.",
                        "decimalPlaces": 2,
                      }
                    ]
                usdcBucket:
                  summary: USDC bucket
                  description: Buckets are used to aggregate various currencies in one balance entry.
                  value:
                    assets: [
                      {
                        "id": "f0844d82-7097-4521-95bc-d843724a893e",
                        "type": "BucketAsset",
                        "name": "USDC",
                        "symbol": "USDC",
                        "description": "Aggregation of all USDC token over the different blockchains.",
                        "decimalPlaces": 6,
                      }
                    ]
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/components/responses/ErrorResponse'
        '5XX':
          $ref: '#/components/responses/ErrorResponse'

  /capabilities/assets/{id}:
    get:
      operationId: getAssetDetails
      summary: Get details of a supported additional asset.
      description: >-
        Returns the details of an assets, supported in addition to the predefined
        national currencies and the native cryptocurrencies.
      tags: [ capabilities ]
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/EntityIdPathParam'
      responses:
        '200':
          description: List of additional assets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDefinition'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/components/responses/ErrorResponse'
        '5XX':
          $ref: '#/components/responses/ErrorResponse'

  /accounts:
    get:
      operationId: getAccounts
      summary: Get list of sub-accounts
      tags: [ accounts ]
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/AccountBalancesQueryParam'
      responses:
        '200':
          description: List of sub-accounts.
          content:
            application/json:
              schema:
                type: object
                required: [ accounts ]
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/components/responses/ErrorResponse'
        '5XX':
          $ref: '#/components/responses/ErrorResponse'

  /accounts/{accountId}:
    get:
      operationId: getAccountDetails
      summary: Get sub-account details
      tags: [ accounts ]
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/AccountBalancesQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of sub-accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/components/responses/ErrorResponse'
        '5XX':
          $ref: '#/components/responses/ErrorResponse'

  /accounts/{accountId}/balances:
    get:
      operationId: getBalances
      summary: Get current balances
      tags: [ balances ]
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/AssetIdQueryParam'
        - $ref: '#/components/parameters/NationalCurrencyCodeQueryParam'
        - $ref: '#/components/parameters/CryptocurrencySymbolQueryParam'
        - $ref: '#/components/parameters/SubAccountIdPathParam'
      responses:
        '200':
          description: List of asset balances.
          content:
            application/json:
              schema:
                type: object
                required: [ balances ]
                properties:
                  balances:
                    $ref: '#/components/schemas/Balances'
              examples:
                nationalCurrency:
                  summary: National currency balance
                  value: {
                    "balances": [
                      {
                        "id": "4ff63424-7e09-4cdf-b7f1-da7b7c65eabe",
                        "asset": {
                          "nationalCurrencyCode": "USD"
                        },
                        "availableAmount": "1743.43",
                        "lockedAmount": "0"
                      }
                    ]
                  }
                blockchainNativeCurrency:
                  summary: Blockchain native currency balance
                  value: {
                    "balances": [
                      {
                        "id": "76a33ed9-8aa2-4781-93f8-d2369c0c2b14",
                        "asset": {
                          "blockchain": "Bitcoin",
                          "cryptocurrencySymbol": "BTC"
                        },
                        "availableAmount": "7.00008214",
                        "lockedAmount": "0"
                      }
                    ]
                  }
                bucketCurrency:
                  summary: Usage of tokens and buckets in balance
                  description: >-
                    `assetId` must be one of the IDs returned by `GET /capabilities/assets`.
                    The ID in this example is the ID of the USDC bucket defined in the example
                    responses of `GET /capabilities/assets`.
                  value: {
                    "balances": [
                      {
                        "id": "6f572d77-2f8d-4962-adf4-de4a62bc236b",
                        "asset": {
                          "assetId": "f0844d82-7097-4521-95bc-d843724a893e"
                        },
                        "availableAmount": "95.03"
                      }
                    ]
                  }
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/components/responses/ErrorResponse'
        '5XX':
          $ref: '#/components/responses/ErrorResponse'

  /accounts/{accountId}/historic-balances:
    get:
      operationId: getHistoricBalances
      summary: Get balances at specific time in the past
      tags: [ historicBalances ]
      parameters:
        - $ref: '#/components/parameters/X-FBAPI-KEY'
        - $ref: '#/components/parameters/X-FBAPI-NONCE'
        - $ref: '#/components/parameters/X-FBAPI-TIMESTAMP'
        - $ref: '#/components/parameters/X-FBAPI-SIGNATURE'
        - $ref: '#/components/parameters/PaginationLimit'
        - $ref: '#/components/parameters/PaginationStartingAfter'
        - $ref: '#/components/parameters/PaginationEndingBefore'
        - $ref: '#/components/parameters/AssetIdQueryParam'
        - $ref: '#/components/parameters/NationalCurrencyCodeQueryParam'
        - $ref: '#/components/parameters/CryptocurrencySymbolQueryParam'

        - $ref: '#/components/parameters/SubAccountIdPathParam'
        - name: time
          description: Time of the requested balances.
          in: query
          required: true
          schema: { type: string, format: date-time }
      responses:
        '200':
          description: List of asset balances.
          content:
            application/json:
              schema:
                type: object
                required: [ balances ]
                properties:
                  balances:
                    $ref: '#/components/schemas/Balances'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/components/responses/ErrorResponse'
        '5XX':
          $ref: '#/components/responses/ErrorResponse'

components:
  parameters:
    X-FBAPI-KEY:
      name: X-FBAPI-KEY
      in: header
      required: true
      description: API authentication key.
      schema:
        type: string

    X-FBAPI-TIMESTAMP:
      name: X-FBAPI-TIMESTAMP
      in: header
      required: true
      description: Request timestamp in milliseconds since Unix epoch.
      schema:
        type: number

    X-FBAPI-NONCE:
      name: X-FBAPI-NONCE
      in: header
      required: true
      description: Unique identifier of the request.
      schema:
        type: string

    X-FBAPI-SIGNATURE:
      name: X-FBAPI-SIGNATURE
      in: header
      required: true
      description: >-
        Request signature using the chosen cryptographic algorithm.
        The signature is to be calculated on concatenation of the
        following request fields in the specified order:
        
        - `X-FBAPI-TIMESTAMP`
        - `X-FBAPI-NONCE`
        - HTTP request method in upper case
        - Endpoint path, including the query parameters
        - Request body
      schema:
        type: string

    EntityIdPathParam:
      name: id
      in: path
      required: true
      description: Entity unique identifier.
      schema:
        type: string

    SubAccountIdPathParam:
      name: accountId
      in: path
      required: true
      description: Sub-account identifier.
      schema:
        type: string
        pattern: ^[A-Za-z0-9_-]+$

    ListOrderQueryParam:
      name: order
      in: query
      description: Controls the order of the items in the returned list.
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc

    PaginationLimit:
      name: limit
      in: query
      description: Maximum number of returned items.
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 10

    PaginationStartingAfter:
      name: startingAfter
      in: query
      description: >-
        Object ID.
        Instructs to return the items immediately following this
        object. Cannot be used together with `endingBefore`.
      schema:
        type: string

    PaginationEndingBefore:
      name: endingBefore
      in: query
      description: >-
        Object ID.
        Instructs to return the items immediately preceding this
        object. Cannot be used together with `startingAfter`.
      schema:
        type: string

    AssetIdQueryParam:
      name: assetId
      description: >-
        ID of one of the assets returned in get-additional-assets.
        Limits the response to one.
        Cannot be used in conjunction with cryptocurrencySymbol or nationalCurrencyCode
      in: query
      schema:
        type: string
    
    NationalCurrencyCodeQueryParam:
      name: nationalCurrencyCode
      description: >-
        Limits the response to one asset with the provided NationalCurrencyCode
        Cannot be used in conjunction with cryptocurrencySymbol or assetId
      in: query
      schema:
        $ref: '#/components/schemas/NationalCurrencyCode'

    CryptocurrencySymbolQueryParam:
      name: cryptocurrencySymbol
      description: >-
        Limits the response to one asset with the provided CryptocurrencySymbol
        Cannot be used in conjunction with nationalCurrencyCode or assetId
      in: query
      schema:
        $ref: '#/components/schemas/CryptocurrencySymbol'

    AccountBalancesQueryParam:
      name: balances
      in: query
      description: >-
        Flag to include the account balances in the response.
        Balances are not returned by default for account endpoints.
      schema:
        type: boolean

  responses:
    BadRequestResponse:
      description: Request could not be processed due to a client error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestError'

    UnauthorizedResponse:
      description: Request is unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'

    ErrorResponse:
      description: Failed to process request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'

  schemas:
    GeneralError:
      description: >-
        Should be returned only if there in no more specific object.
      type: object
      required: [ message, errorType ]
      properties:
        message:
          description: Description of the error.
          type: string
        errorType:
          enum:
            - internal-error
            - not-found

    BadRequestError:
      description: >-
        Request could not be processed due to a client error.
        
        If the error is caused by a missing or wrong property in the request,
        `errorType` must have the value `schema-property-error` and the properties 
        `propertyName` and `requestPart` must be specified. For more general
        schema errors, the error type should be `schema-error` and `requestPart` must
        be specified. For all the other cases the error type should be `bad-request`.
      type: object
      required: [ message, errorType ]
      properties:
        message:
          description: Description of the error.
          type: string
        errorType:
          enum:
            - schema-error
            - schema-property-error
            - bad-request
            - unknown-asset
            - unsupported-conversion
            - quote-not-ready
            - deposit-address-disabled
            - order-not-trading
            - idempotency-key-reuse
        propertyName:
          description: Name of property that caused the error.
          type: string
        requestPart:
          $ref: '#/components/schemas/RequestPart'

    UnauthorizedError:
      description: >-
        Request is unauthorized
      type: object
      required: [ message, errorType ]
      properties:
        message:
          description: Description of the error.
          type: string
        errorType:
          enum:
            - unauthorized
        propertyName:
          description: Name of property that caused the error.
          enum:
            - X-FBAPI-KEY
        requestPart:
          description: Request part where the error occurred.
          enum:
            - headers

    RequestPart:
      description: Request part where the error occurred.
      enum:
        - params
        - body
        - querystring
        - headers

    Capabilities:
      type: object
      required: [ version, components ]
      properties:
        version:
          description: Version number of the API specification that this server implements
          type: string
          pattern: ^(\d)+\.(\d)+\.(\d)+$
          example: '1.0.37'
        components:
          $ref: '#/components/schemas/ApiComponents'

    ApiComponents:
      description: >-
        Lists supported API components and which sub-accounts support the component.
      type: object
      required: [ accounts, balances ]
      properties:
        accounts:
          $ref: '#/components/schemas/AccountsSet'
        balances:
          $ref: '#/components/schemas/AccountsSet'
        historicBalances:
          $ref: '#/components/schemas/AccountsSet'
        transfers:
          $ref: '#/components/schemas/AccountsSet'
        transfersBlockchain:
          $ref: '#/components/schemas/AccountsSet'
        transfersFiat:
          $ref: '#/components/schemas/AccountsSet'
        transfersPeerAccounts:
          $ref: '#/components/schemas/AccountsSet'
        trading:
          $ref: '#/components/schemas/AccountsSet'
        liquidity:
          $ref: '#/components/schemas/AccountsSet'

    AccountsSet:
      description: >-
        Indicates to which sub-accounts an operation applies.
        The value could be either a list of sub-account IDs or "*".
        The value "*" indicates all the sub-accounts.
      oneOf:
        - type: string
          pattern: '^\*$'
        - type: array
          items:
            type: string

    PositiveAmount:
      type: string
      pattern: ^\d+(\.\d+)?

    AccountStatus:
      type: string
      enum:
        - active
        - inactive

    Account:
      type: object
      required: [ id, title, status ]
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        balances:
          $ref: '#/components/schemas/Balances'
        status:
          $ref: '#/components/schemas/AccountStatus'

    Balances:
      type: array
      description: >-
        Maps balance assets to their balances.
      items:
        $ref: '#/components/schemas/AssetBalance'

    AssetBalance:
      type: object
      required: [ id, asset, availableAmount ]
      properties:
        id:
          type: string
        asset:
          $ref: '#/components/schemas/AssetReference'
        availableAmount:
          $ref: '#/components/schemas/PositiveAmount'
        lockedAmount:
          $ref: '#/components/schemas/PositiveAmount'

    AssetCommonProperties:
      type: object
      required: [ id, name, symbol, type, decimalPlaces ]
      properties:
        id:
          type: string
        name:
          type: string
        symbol:
          type: string
        description:
          type: string
        decimalPlaces:
          type: integer
        testAsset:
          type: boolean

    BucketAsset:
      allOf:
        - $ref: '#/components/schemas/AssetCommonProperties'
        - type: object
          required: [ type ]
          properties:
            type:
              enum: [ BucketAsset ]

    Erc20Token:
      allOf:
        - $ref: '#/components/schemas/AssetCommonProperties'
        - type: object
          required: [ blockchain, contractAddress, type ]
          properties:
            type:
              enum: [ Erc20Token ]
            blockchain:
              $ref: '#/components/schemas/Blockchain'
            contractAddress:
              type: string
      example:
        blockchain: Ethereum
        name: Tether USD
        symbol: USDT
        decimalPlaces: 6
        contractAddress: '0xdAC17F958D2ee523a2206206994597C13D831ec7'

    Bep20Token:
      allOf:
        - $ref: '#/components/schemas/AssetCommonProperties'
        - type: object
          required: [ blockchain, contractAddress, type ]
          properties:
            type:
              enum: [ Bep20Token ]
            blockchain:
              $ref: '#/components/schemas/Blockchain'
            contractAddress:
              type: string

    StellarToken:
      allOf:
        - $ref: '#/components/schemas/AssetCommonProperties'
        - type: object
          required: [ blockchain, issuerAddress, stellarCurrencyCode, type ]
          properties:
            type:
              enum: [ StellarToken ]
            blockchain:
              $ref: '#/components/schemas/Blockchain'
            issuerAddress:
              type: string
            stellarCurrencyCode:
              type: string

    AssetDefinition:
      anyOf:
        - $ref: '#/components/schemas/BucketAsset'
        - $ref: '#/components/schemas/Erc20Token'
        - $ref: '#/components/schemas/Bep20Token'
        - $ref: '#/components/schemas/StellarToken'

    NationalCurrency:
      type: object
      required:
        - nationalCurrencyCode
      properties:
        nationalCurrencyCode:
          $ref: '#/components/schemas/NationalCurrencyCode'
        testAsset:
          type: boolean

    NativeCryptocurrency:
      type: object
      required:
        - cryptocurrencySymbol
      properties:
        blockchain:
          $ref: '#/components/schemas/Blockchain'
        cryptocurrencySymbol:
          $ref: '#/components/schemas/CryptocurrencySymbol'
        testAsset:
          type: boolean

    OtherAssetReference:
      type: object
      required:
        - assetId
      properties:
        assetId:
          description: ID of one of the assets returned in get-additional-assets.
          type: string

    CryptocurrencyReference:
      oneOf:
        - $ref: '#/components/schemas/NativeCryptocurrency'
        - $ref: '#/components/schemas/OtherAssetReference'

    AssetReference:
      oneOf:
        - $ref: '#/components/schemas/NationalCurrency'
        - $ref: '#/components/schemas/NativeCryptocurrency'
        - $ref: '#/components/schemas/OtherAssetReference'

    Blockchain:
      type: string
      enum:
        - Algorand
        - Avalanche
        - Bitcoin
        - BNB
        - Cardano
        - Casper
        - Celo
        - Cosmos
        - Cronos
        - Dogecoin
        - Ethereum
        - Ethereum Classic
        - Hedera
        - Litecoin
        - Monero
        - Polygon PoS
        - Polkadot
        - Solana
        - Stellar
        - Tezos
        - TRON
        - XRP

    Layer1Cryptocurrency:
      type: string
      enum:
        - ADA
        - ALGO
        - ATOM
        - AVAX
        - BNB
        - BTC
        - CELO
        - CRO
        - CSPR
        - DOGE
        - DOT
        - ETC
        - ETH
        - HBAR
        - LTC
        - SOL
        - TRX
        - XLM
        - XMR
        - XRP
        - XTZ

    Layer2Cryptocurrency:
      type: string
      enum:
        - ARB
        - IMX
        - MATIC
        - SNX

    CryptocurrencySymbol:
      anyOf:
        - $ref: '#/components/schemas/Layer1Cryptocurrency'
        - $ref: '#/components/schemas/Layer2Cryptocurrency'


    NationalCurrencyCode:
      type: string
      description: National currency codes as defined in ISO 4217.
      enum:
        - ADP
        - AED
        - AFA
        - AFN
        - ALK
        - ALL
        - AMD
        - ANG
        - AOA
        - AOK
        - AON
        - AOR
        - ARA
        - ARP
        - ARS
        - ARY
        - ATS
        - AUD
        - AWG
        - AYM
        - AZM
        - BAD
        - BAM
        - BBD
        - BDT
        - BEC
        - BEF
        - BEL
        - BGJ
        - BGK
        - BGL
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOP
        - BOV
        - BRB
        - BRC
        - BRE
        - BRL
        - BRN
        - BRR
        - BSD
        - BTN
        - BUK
        - BWP
        - BYB
        - BYN
        - BYR
        - BZD
        - CAD
        - CDF
        - CHC
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CSD
        - CSJ
        - CSK
        - CUC
        - CUP
        - CVE
        - CYP
        - CZK
        - DDM
        - DEM
        - DJF
        - DKK
        - DOP
        - DZD
        - ECS
        - ECV
        - EEK
        - EGP
        - ERN
        - ESA
        - ESB
        - ESP
        - ETB
        - EUR
        - FIM
        - FJD
        - FKP
        - FRF
        - GBP
        - GEK
        - GEL
        - GHC
        - GHP
        - GHS
        - GIP
        - GMD
        - GNE
        - GNF
        - GNS
        - GQE
        - GRD
        - GTQ
        - GWE
        - GWP
        - GYD
        - HKD
        - HNL
        - HRD
        - HRK
        - HTG
        - HUF
        - IDR
        - IEP
        - ILP
        - ILR
        - ILS
        - INR
        - IQD
        - IRR
        - ISJ
        - ISK
        - ITL
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAJ
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LSM
        - LTL
        - LTT
        - LUC
        - LUF
        - LUL
        - LVL
        - LVR
        - LYD
        - MAD
        - MDL
        - MGA
        - MGF
        - MKD
        - MLF
        - MMK
        - MNT
        - MOP
        - MRO
        - MRU
        - MTL
        - MTP
        - MUR
        - MVQ
        - MVR
        - MWK
        - MXN
        - MXP
        - MXV
        - MYR
        - MZE
        - MZM
        - NAD
        - NGN
        - NIC
        - NIO
        - NLG
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEH
        - PEI
        - PEN
        - PES
        - PGK
        - PHP
        - PKR
        - PLN
        - PLZ
        - PTE
        - PYG
        - QAR
        - RHD
        - ROK
        - ROL
        - RON
        - RSD
        - RUB
        - RUR
        - RWF
        - SAR
        - SBD
        - SCR
        - SDD
        - SDG
        - SDP
        - SEK
        - SGD
        - SHP
        - SIT
        - SKK
        - SLL
        - SOS
        - SRD
        - SRG
        - SSP
        - STD
        - STN
        - SUR
        - SVC
        - SYP
        - SZL
        - THB
        - TJR
        - TJS
        - TMM
        - TMT
        - TND
        - TOP
        - TPE
        - TRL
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UAK
        - UGS
        - UGW
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYN
        - UYP
        - UYU
        - UYW
        - UZS
        - VEB
        - VEF
        - VES
        - VNC
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XOF
        - XPF
        - XSU
        - XTS
        - XUA
        - XXX
        - YDD
        - YER
        - YUD
        - YUM
        - YUN
        - ZAL
        - ZAR
        - ZMK
        - ZMW
        - ZRN
        - ZRZ
        - ZWC
        - ZWD
        - ZWL
        - ZWN
        - ZWR
