openapi: 3.0.0
info:
  title: '[Draft] Fireblocks Provider CrossTransfer API'
  version: 0.0.1

  contact:
    name: Fireblocks
    url: https://fireblocks.com

tags:
  - name: capabilities
    description: Server capabilities discovery operations.
  - name: crosstransfers
    description: Fund transfers from fiat to digital assets, digital assets to fiat or digital to digital assets.

x-path-params:
  EntityIdPathParam: { $ref: './fb-provider-api.yaml#/components/parameters/EntityIdPathParam' }
  SubAccountIdPathParam: { $ref: './fb-provider-api.yaml#/components/parameters/SubAccountIdPathParam' }

x-query-params:
  PaginationLimit: { $ref: './fb-provider-api.yaml#/components/parameters/PaginationLimit' }
  PaginationStartingAfter: { $ref: './fb-provider-api.yaml#/components/parameters/PaginationStartingAfter' }
  PaginationEndingBefore: { $ref: './fb-provider-api.yaml#/components/parameters/PaginationEndingBefore' }
  ListOrderQueryParam: { $ref: './fb-provider-api.yaml#/components/parameters/ListOrderQueryParam' }

x-header-params:
  X-FBAPI-KEY: { $ref: './fb-provider-api.yaml#/components/parameters/X-FBAPI-KEY' }
  X-FBAPI-SIGNATURE: { $ref: './fb-provider-api.yaml#/components/parameters/X-FBAPI-SIGNATURE' }
  X-FBAPI-NONCE: { $ref: './fb-provider-api.yaml#/components/parameters/X-FBAPI-NONCE' }
  X-FBAPI-TIMESTAMP: { $ref: './fb-provider-api.yaml#/components/parameters/X-FBAPI-TIMESTAMP' }

x-schemas:
  PositiveAmount: { $ref: './fb-provider-api.yaml#/components/schemas/PositiveAmount' }
  AssetReference: { $ref: './fb-provider-api.yaml#/components/schemas/AssetReference' }
  CryptocurrencyReference: { $ref: './fb-provider-api.yaml#/components/schemas/CryptocurrencyReference' }
  Blockchain: { $ref: './fb-provider-api.yaml#/components/schemas/Blockchain' }
  NationalCurrency: { $ref: './fb-provider-api.yaml#/components/schemas/NationalCurrency' }
  NativeCryptocurrency: { $ref: './fb-provider-api.yaml#/components/schemas/NativeCryptocurrency' }
  AccountId: { './fb-provider-api.yaml#/components/schemas/AccountId' }
  AccountRef: { './fb-provider-api.yaml#/components/schemas/AccountRef' }
  ExternalAccountRef: { './fb-provider-api.yaml#/components/schemas/ExternalAccountRef' }
  FiatRail: { './fb-provider-api.yaml#/components/schemas/FiatRail' }
x-responses:
  BadRequestResponse: { $ref: './fb-provider-api.yaml#/components/responses/BadRequestResponse' }
  UnauthorizedResponse: { $ref: './fb-provider-api.yaml#/components/responses/UnauthorizedResponse' }
  ErrorResponse: { $ref: './fb-provider-api.yaml#/components/responses/ErrorResponse' }

paths:
  /crosstransfer/onramp:
    post:
      operationId: createCrossTransferOnRampRouting
      summary: >-
        Creates deposit-only fiat account as a source, configures trigger and stores 
        payment instruction details about destination crypto account. As a result, the user will be
        able to deposit fiat to the source account and receive payment in crypto to the 
        destination account.
      tags: [ crosstransfers ]
      parameters:
        - $ref: '#/x-header-params/X-FBAPI-KEY'
        - $ref: '#/x-header-params/X-FBAPI-NONCE'
        - $ref: '#/x-header-params/X-FBAPI-SIGNATURE'
        - $ref: '#/x-header-params/X-FBAPI-TIMESTAMP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOnRampRoutingRequest'
      responses:
        '200':
          description: Sub-account created.
          content:
            application/json:
              schema:
                $ref: '#/x-schemas/AccountId'
        '400':
          $ref: '#/x-responses/BadRequestResponse'
        '401':
          $ref: '#/x-responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/x-responses/ErrorResponse'
        '5XX':
          $ref: '#/x-responses/ErrorResponse'


  /crosstransfer/offramp:
    post:
      operationId: createCrossTransferOffRampRouting
      summary: >-
        Creates deposit-only crypto account as a source, configures trigger and stores 
        payment instruction details about destination fiat account. As a result, the user will be
        able to deposit crypto to the source account and receive fiat to the destination account.
      tags: [ crosstransfers ]
      parameters:
        - $ref: '#/x-header-params/X-FBAPI-KEY'
        - $ref: '#/x-header-params/X-FBAPI-NONCE'
        - $ref: '#/x-header-params/X-FBAPI-SIGNATURE'
        - $ref: '#/x-header-params/X-FBAPI-TIMESTAMP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOffRampRoutingRequest'
      responses:
        '200':
          description: Sub-account created.
          content:
            application/json:
              schema:
                $ref: '#/x-schemas/AccountId'
        '400':
          $ref: '#/x-responses/BadRequestResponse'
        '401':
          $ref: '#/x-responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/x-responses/ErrorResponse'
        '5XX':
          $ref: '#/x-responses/ErrorResponse'

  /crosstransfer/bridging:
    post:
      operationId: createCrossTransferBridging
      summary: >-
        Creates deposit-only crypto account as a source, configures trigger and stores 
        payment instruction details about destination crypto address. As a result, the user will be
        able to deposit crypto to the source account and receive exchanged value to destination address 
        in selected cryptocurrency.
      tags: [ crosstransfers ]
      parameters:
        - $ref: '#/x-header-params/X-FBAPI-KEY'
        - $ref: '#/x-header-params/X-FBAPI-NONCE'
        - $ref: '#/x-header-params/X-FBAPI-SIGNATURE'
        - $ref: '#/x-header-params/X-FBAPI-TIMESTAMP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBridgingRequest'
      responses:
        '200':
          description: Sub-account created.
          content:
            application/json:
              schema:
                $ref: '#/x-schemas/AccountId'
        '400':
          $ref: '#/x-responses/BadRequestResponse'
        '401':
          $ref: '#/x-responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/x-responses/ErrorResponse'
        '5XX':
          $ref: '#/x-responses/ErrorResponse'

components:
  schemas:
    CreateBridgingRequest:
      type: object
      required: [ idempotencyKey, customerId, source, destination, ]
      properties:
        idempotencyKey:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        customerId:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        source:
          $ref: '#/components/schemas/BridgingSourceParameters'
        destination:
          $ref: '#/components/schemas/BridgingDestination'
    BridgingDestination:
      type: object
      required:
        - chain
        - currency
        - address
      properties:
        chain:
          $ref: '#/x-schemas/Blockchain'
        currency:
          $ref: '#/x-schemas/NativeCryptocurrency'
        address:
          description: Address of the destination account.
          type: string
        memo:
          description: Memo field for the destination address. Required for some blockchains.
          type: string
    BridgingSourceParameters:
      type: object
      required: [ currency ]
      properties:
        chain:
          $ref: '#/x-schemas/Blockchain'
        currency:
          $ref: '#/x-schemas/NativeCryptocurrency'
        developerFee:
          $ref: './fb-provider-api.yaml#/components/schemas/PositiveAmount'
    CreateOnRampRoutingRequest:
      type: object
      required:
        - idempotencyKey
        - customerId
        - source
        - destination
      properties:
        idempotencyKey:
          type: string
          example: 76a33ed9-8aa2-4781-93f8-d2369c0c2b14
        customerId:
          type: string
          example: 76a33ed9-8aa2-4781-93f8-d2369c0c2b14
        source:
          $ref: '#/components/schemas/OnRampSourceParameters'
        destination:
          $ref: '#/components/schemas/OnRampDestination'
    OnRampDestination:
      type: object
      required:
        - chain
        - currency
        - address
      properties:
        chain:
          $ref: '#/x-schemas/Blockchain'
        currency:
          $ref: '#/x-schemas/NativeCryptocurrency'
        address:
          description: Address of the destination account.
          type: string
        memo:
          description: Memo field for the destination address. Required for some blockchains.
          type: string
    OnRampSourceParameters:
      type: object
      required:
        - currency
      properties:
        currency:
          $ref: '#/x-schemas/NativeCryptocurrency'
        developerFee:
          $ref: '#/x-schemas/PositiveAmount'
    OffRampSourceParameters:
      type: object
      required: [ chain, currency ]
      properties:
        chain:
          $ref: '#/x-schemas/Blockchain'
        currency:
          $ref: '#/x-schemas/NativeCryptocurrency'
        developerFee:
          $ref: '#/x-schemas/PositiveAmount'
        returnAddress:
          type: string
          description: >-
            Blockchain address to return the funds in case of a failed transaction. 
            MUST be on same blockchain network that is selected in the chain field.
            Field will be ignored in case of Stellar chain.
    OffRampDestination:
      type: object
      required: [ rail, currency, account ]
      properties:
        rail:
          $ref: '#/x-schemas/FiatRail'
        currency:
          $ref: '#/x-schemas/NationalCurrency'
        message:
          type: string
          description: >-
            A message to be sent with a wire transfer. 
            It can have at most 3 lines (separated by "\n"),
            each line with a max length of 35 chars
          maxLength: 109
        reference:
          type: string
          description: >-
            If rail is SEPA, this is the SEPA reference and must be from 6 to 140 characters. 
            The allowed characters are a-z, A-Z, 0-9, spaces, ampersand (&), hyphen (-), 
            full stop (.), and solidus (/). If rail is ACH, this is the ACH reference and
            can be at most 10 characters, A-Z, a-z, 0-9, and spaces.
        account:
          oneOf:
            - $ref: '#/x-schemas/ExternalAccountRef'
            - $ref: '#/x-schemas/AccountRef'
          discriminator:
            propertyName: type
            mapping:
              ExternalAccount: '#/x-schemas/ExternalAccountRef'
              Account: '#/components/schemas/AccountRef'
    CreateOffRampRoutingRequest:
      type: object
      required: [ idempotencyKey, customerId, source, destination, ]
      properties:
        idempotencyKey:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        customerId:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        source:
          $ref: '#/components/schemas/OffRampSourceParameters'
        destination:
          $ref: '#/components/schemas/OffRampDestination'
