openapi: 3.0.0
info:
  title: '[Draft] Fireblocks Provider CrossTransfer API'
  version: 0.0.1

  contact:
    name: Fireblocks
    url: https://fireblocks.com

tags:
  - name: crosstransfers
    description: Fund transfers from fiat to digital assets, digital assets to fiat or digital to digital assets.

x-path-params:
  EntityIdPathParam: { $ref: './fb-provider-api.yaml#/components/parameters/EntityIdPathParam' }
  SubAccountIdPathParam: { $ref: './fb-provider-api.yaml#/components/parameters/SubAccountIdPathParam' }

x-query-params:
  PaginationLimit: { $ref: './fb-provider-api.yaml#/components/parameters/PaginationLimit' }
  PaginationStartingAfter: { $ref: './fb-provider-api.yaml#/components/parameters/PaginationStartingAfter' }
  PaginationEndingBefore: { $ref: './fb-provider-api.yaml#/components/parameters/PaginationEndingBefore' }
  ListOrderQueryParam: { $ref: './fb-provider-api.yaml#/components/parameters/ListOrderQueryParam' }

x-header-params:
  X-FBAPI-KEY: { $ref: './fb-provider-api.yaml#/components/parameters/X-FBAPI-KEY' }
  X-FBAPI-SIGNATURE: { $ref: './fb-provider-api.yaml#/components/parameters/X-FBAPI-SIGNATURE' }
  X-FBAPI-NONCE: { $ref: './fb-provider-api.yaml#/components/parameters/X-FBAPI-NONCE' }
  X-FBAPI-TIMESTAMP: { $ref: './fb-provider-api.yaml#/components/parameters/X-FBAPI-TIMESTAMP' }

x-schemas:
  PositiveAmount: { $ref: './fb-provider-api.yaml#/components/schemas/PositiveAmount' }
  AssetReference: { $ref: './fb-provider-api.yaml#/components/schemas/AssetReference' }
  CryptocurrencyReference: { $ref: './fb-provider-api.yaml#/components/schemas/CryptocurrencyReference' }
  Blockchain: { $ref: './fb-provider-api.yaml#/components/schemas/Blockchain' }
  NationalCurrency: { $ref: './fb-provider-api.yaml#/components/schemas/NationalCurrency' }
  NativeCryptocurrency: { $ref: './fb-provider-api.yaml#/components/schemas/NativeCryptocurrency' }
  AccountId: { './fb-provider-api.yaml#/components/schemas/AccountId' }
  PublicBlockchainAddress: { $ref: './fb-provider-transfer-api.yaml#/components/schemas/PublicBlockchainAddress' }
  FiatTransfer: { $ref: './fb-provider-transfer-api.yaml#/components/schemas/FiatTransfer'}
  PublicBlockchainTransaction: { $ref: './fb-provider-transfer-api.yaml#/components/schemas/PublicBlockchainTransaction' }
  DepositStatus: { $ref: './fb-provider-transfer-api.yaml#/components/schemas/DepositStatus' }
  WithdrawalStatus: { $ref: './fb-provider-transfer-api.yaml#/components/schemas/WithdrawalStatus' }

x-responses:
  BadRequestResponse: { $ref: './fb-provider-api.yaml#/components/responses/BadRequestResponse' }
  UnauthorizedResponse: { $ref: './fb-provider-api.yaml#/components/responses/UnauthorizedResponse' }
  ErrorResponse: { $ref: './fb-provider-api.yaml#/components/responses/ErrorResponse' }

paths:
  /crosstransfers:
    get:
      operationId: listCrossTransfers
      summary: >-
        Lists all cross transfers.
      tags: [ crosstransfers ]
      parameters:
        - $ref: '#/x-query-params/PaginationLimit'
        - $ref: '#/x-query-params/PaginationStartingAfter'
        - $ref: '#/x-query-params/PaginationEndingBefore'
        - $ref: '#/x-query-params/ListOrderQueryParam'
        - $ref: '#/x-header-params/X-FBAPI-KEY'
        - $ref: '#/x-header-params/X-FBAPI-NONCE'
        - $ref: '#/x-header-params/X-FBAPI-SIGNATURE'
        - $ref: '#/x-header-params/X-FBAPI-TIMESTAMP'
        - name: orderId
          in: query
          description: Filter by order ID.
          schema:
            type: string
      responses:
        '200':
          description: List of cross transfers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCrossTransfersResult'
                
        '400':
          $ref: '#/x-responses/BadRequestResponse'
        '401':
          $ref: '#/x-responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/x-responses/ErrorResponse'
        '5XX':
          $ref: '#/x-responses/ErrorResponse'

  /crosstransfers/onramp/standingorders:
    post:
      operationId: createCrossTransferOnRampRouting
      summary: >-
        Creates deposit-only fiat account as a source, configures trigger and stores 
        payment instruction details about destination crypto account. As a result, the user will be
        able to deposit fiat to the source account and receive payment in crypto to the 
        destination account.
      tags: [ crosstransfers ]
      parameters:
        - $ref: '#/x-header-params/X-FBAPI-KEY'
        - $ref: '#/x-header-params/X-FBAPI-NONCE'
        - $ref: '#/x-header-params/X-FBAPI-SIGNATURE'
        - $ref: '#/x-header-params/X-FBAPI-TIMESTAMP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOnRampRoutingRequest'
      responses:
        '200':
          description: Sub-account created.
          content:
            application/json:
              schema:
                $ref: '#/x-schemas/AccountId'
        '400':
          $ref: '#/x-responses/BadRequestResponse'
        '401':
          $ref: '#/x-responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/x-responses/ErrorResponse'
        '5XX':
          $ref: '#/x-responses/ErrorResponse'

  /crosstransfers/offramp/standingorders:
    post:
      operationId: createCrossTransferOffRampRouting
      summary: >-
        Creates deposit-only crypto account as a source, configures trigger and stores 
        payment instruction details about destination fiat account. As a result, the user will be
        able to deposit crypto to the source account and receive fiat to the destination account.
      tags: [ crosstransfers ]
      parameters:
        - $ref: '#/x-header-params/X-FBAPI-KEY'
        - $ref: '#/x-header-params/X-FBAPI-NONCE'
        - $ref: '#/x-header-params/X-FBAPI-SIGNATURE'
        - $ref: '#/x-header-params/X-FBAPI-TIMESTAMP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOffRampRoutingRequest'
      responses:
        '200':
          description: Sub-account created.
          content:
            application/json:
              schema:
                $ref: '#/x-schemas/AccountId'
        '400':
          $ref: '#/x-responses/BadRequestResponse'
        '401':
          $ref: '#/x-responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/x-responses/ErrorResponse'
        '5XX':
          $ref: '#/x-responses/ErrorResponse'

  /crosstransfers/bridging/standingorders:
    post:
      operationId: createCrossTransferBridgingRouting
      summary: >-
        Creates deposit-only crypto account as a source, configures trigger and stores 
        payment instruction details about destination crypto address. As a result, the user will be
        able to deposit crypto to the source account and receive exchanged value to destination address 
        in selected cryptocurrency.
      tags: [ crosstransfers ]
      parameters:
        - $ref: '#/x-header-params/X-FBAPI-KEY'
        - $ref: '#/x-header-params/X-FBAPI-NONCE'
        - $ref: '#/x-header-params/X-FBAPI-SIGNATURE'
        - $ref: '#/x-header-params/X-FBAPI-TIMESTAMP'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBridgingRequest'
      responses:
        '200':
          description: Sub-account created.
          content:
            application/json:
              schema:
                $ref: '#/x-schemas/AccountId'
        '400':
          $ref: '#/x-responses/BadRequestResponse'
        '401':
          $ref: '#/x-responses/UnauthorizedResponse'
        '4XX':
          $ref: '#/x-responses/ErrorResponse'
        '5XX':
          $ref: '#/x-responses/ErrorResponse'

components:
  schemas:
    ListCrossTransfersResult:
      type: object
      properties:
        crossTransfers:
          type: array
          items: 
            $ref: '#/components/schemas/CrsossTransfer'

    CrsossTransfer:
      oneOf:
      - $ref: '#/components/schemas/OnRampCrossTransfer'
      - $ref: '#/components/schemas/OffRampCrossTransfer'
      - $ref: '#/components/schemas/BridgingCrossTransfer'

    OnRampCrossTransfer:
      type: object
      required: [ orderType, payment, order ]
      properties:
        id:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        orderType:
          type: string
          enum: [ OnRamp ]
        payment:
          allOf:
            - $ref: '#/x-schemas/FiatTransfer'
            - type: object
              required: [ status ]
              properties:
                status:
                  $ref: '#/x-schemas/DepositStatus'
        order:
          allOf:
            - $ref: '#/x-schemas/PublicBlockchainTransaction'
            - type: object
              required: [ status ]
              properties:
                status:
                  $ref: '#/x-schemas/WithdrawalStatus'

    OffRampCrossTransfer:
      type: object
      required: [ orderType, payment, order ]
      properties:
        id:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        orderType:
          type: string
          enum: [ OffRamp ]
        payment:
          allOf:
            - $ref: '#/x-schemas/PublicBlockchainTransaction'
            - type: object
              required: [ status ]
              properties:
                status:
                  $ref: '#/x-schemas/DepositStatus'
        order:
          allOf:
            - $ref: '#/x-schemas/FiatTransfer'
            - type: object
              required: [ status ]
              properties:
                status:
                  $ref: '#/x-schemas/WithdrawalStatus'

    BridgingCrossTransfer:
      type: object
      required: [ orderType, payment, order ]
      properties:
        id:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        orderType:
          type: string
          enum: [ Bridging ]
        payment:
          allOf:
            - $ref: '#/x-schemas/PublicBlockchainTransaction'
            - type: object
              required: [ status ]
              properties:
                status:
                  $ref: '#/x-schemas/DepositStatus'
        order:
          allOf:
            - $ref: '#/x-schemas/PublicBlockchainTransaction'
            - type: object
              required: [ status ]
              properties:
                status:
                  $ref: '#/x-schemas/WithdrawalStatus'
        
    CryptoPaymentAccountParams:
      allOf:
        - $ref: '#/x-schemas/NativeCryptocurrency'
        - type: object
          required: [ developerFee ]
          properties:
            developerFee:
              $ref: './fb-provider-api.yaml#/components/schemas/PositiveAmount'

    FiatPaymentAccountParams:
      allOf:
        - $ref: '#/x-schemas/NationalCurrency'
        - type: object
          required: [ developerFee ]
          properties:
            developerFee:
              $ref: './fb-provider-api.yaml#/components/schemas/PositiveAmount'

    CreateBridgingRequest:
      type: object
      required: [ idempotencyKey, customerId, source, destination, ]
      properties:
        idempotencyKey:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        customerId:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        source:
          $ref: '#/components/schemas/CryptoPaymentAccountParams'
        destination:
          $ref: '#/x-schemas/PublicBlockchainAddress'

    CreateOnRampRoutingRequest:
      type: object
      required:
        - idempotencyKey
        - customerId
        - source
        - destination
      properties:
        idempotencyKey:
          type: string
          example: 76a33ed9-8aa2-4781-93f8-d2369c0c2b14
        customerId:
          type: string
          example: 76a33ed9-8aa2-4781-93f8-d2369c0c2b14
        source:
          $ref: '#/components/schemas/FiatPaymentAccountParams'
        destination:
          $ref: '#/x-schemas/PublicBlockchainAddress'

    OffRampDestination:
      type: object
      properties:
        externalAccountId:
          $ref: '#/x-schemas/AccountId'
        accountId:
          $ref: '#/x-schemas/AccountId'
        reference:
          type: string
          description: Optional reference to be included in transaction.

    CreateOffRampRoutingRequest:
      type: object
      required: [ idempotencyKey, customerId, source, destination, ]
      properties:
        idempotencyKey:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        customerId:
          type: string
          example: '76a33ed9-8aa2-4781-93f8-d2369c0c2b14'
        source:
          $ref: '#/components/schemas/CryptoPaymentAccountParams'
        destination:
          $ref: '#/components/schemas/OffRampDestination'
